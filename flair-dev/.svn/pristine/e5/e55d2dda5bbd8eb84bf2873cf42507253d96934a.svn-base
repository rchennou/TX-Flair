<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.9.1"/>
<title>Flair: flair::actuator::Bldc Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_hds.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Flair
   </div>
   <div id="projectbrief">Framework Libre Air</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.9.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.html"><span>Class&#160;List</span></a></li>
      <li><a href="classes.html"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.html"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classflair_1_1actuator_1_1_bldc.html','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classflair_1_1actuator_1_1_bldc-members.html">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">flair::actuator::Bldc Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Base class for brushless motors drivers.  
 <a href="classflair_1_1actuator_1_1_bldc.html#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_bldc_8h_source.html">Bldc.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for flair::actuator::Bldc:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
 <div class="center">
  <img src="classflair_1_1actuator_1_1_bldc.png" usemap="#flair::actuator::Bldc_map" alt=""/>
  <map id="flair::actuator::Bldc_map" name="flair::actuator::Bldc_map">
<area href="classflair_1_1core_1_1_i_o_device.html" title="Abstract class for input/ouput system. " alt="flair::core::IODevice" shape="rect" coords="231,56,375,80"/>
<area href="classflair_1_1core_1_1_object.html" title="Base class for all Framework&#39;s classes. " alt="flair::core::Object" shape="rect" coords="231,0,375,24"/>
<area href="classflair_1_1actuator_1_1_afro_bldc.html" title="Class for Mikrokopter&#39;s blctrlv2. " alt="flair::actuator::AfroBldc" shape="rect" coords="0,168,144,192"/>
<area href="classflair_1_1actuator_1_1_bl_ctrl_v2.html" title="Class for Mikrokopter&#39;s blctrlv2. " alt="flair::actuator::BlCtrlV2" shape="rect" coords="154,168,298,192"/>
<area href="classflair_1_1actuator_1_1_simu_bldc.html" title="Class for a simulation bldc. " alt="flair::actuator::SimuBldc" shape="rect" coords="308,168,452,192"/>
<area href="classflair_1_1actuator_1_1_x_bldc.html" title="Class for Xufo Bldc. " alt="flair::actuator::XBldc" shape="rect" coords="462,168,606,192"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:acb60358e96275823a489fb2d18a0d119"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1actuator_1_1_bldc.html#acb60358e96275823a489fb2d18a0d119">Bldc</a> (const <a class="el" href="classflair_1_1core_1_1_i_o_device.html">core::IODevice</a> *parent, <a class="el" href="classflair_1_1gui_1_1_layout.html">gui::Layout</a> *layout, std::string name, uint8_t motors_count)</td></tr>
<tr class="memdesc:acb60358e96275823a489fb2d18a0d119"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#acb60358e96275823a489fb2d18a0d119">More...</a><br /></td></tr>
<tr class="separator:acb60358e96275823a489fb2d18a0d119"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35ff4113cea48bfd002d425d2e1b5d49"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1actuator_1_1_bldc.html#a35ff4113cea48bfd002d425d2e1b5d49">Bldc</a> (const <a class="el" href="classflair_1_1core_1_1_object.html">core::Object</a> *parent, std::string name, uint8_t motors_count)</td></tr>
<tr class="memdesc:a35ff4113cea48bfd002d425d2e1b5d49"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a35ff4113cea48bfd002d425d2e1b5d49">More...</a><br /></td></tr>
<tr class="separator:a35ff4113cea48bfd002d425d2e1b5d49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1569d6c4eed96b9f53cae6cd027b7608"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1actuator_1_1_bldc.html#a1569d6c4eed96b9f53cae6cd027b7608">~Bldc</a> ()</td></tr>
<tr class="memdesc:a1569d6c4eed96b9f53cae6cd027b7608"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a1569d6c4eed96b9f53cae6cd027b7608">More...</a><br /></td></tr>
<tr class="separator:a1569d6c4eed96b9f53cae6cd027b7608"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c1d6173c5dcc0fa550464268847ca91"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1actuator_1_1_bldc.html#a6c1d6173c5dcc0fa550464268847ca91">LockUserInterface</a> (void) const </td></tr>
<tr class="memdesc:a6c1d6173c5dcc0fa550464268847ca91"><td class="mdescLeft">&#160;</td><td class="mdescRight">Lock user interface.  <a href="#a6c1d6173c5dcc0fa550464268847ca91">More...</a><br /></td></tr>
<tr class="separator:a6c1d6173c5dcc0fa550464268847ca91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1fba30ad70a6d8ff075d376c0e417dd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1actuator_1_1_bldc.html#ac1fba30ad70a6d8ff075d376c0e417dd">UnlockUserInterface</a> (void) const </td></tr>
<tr class="memdesc:ac1fba30ad70a6d8ff075d376c0e417dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unlock user interface.  <a href="#ac1fba30ad70a6d8ff075d376c0e417dd">More...</a><br /></td></tr>
<tr class="separator:ac1fba30ad70a6d8ff075d376c0e417dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f653e25984ae11ae7f513e1fbad7d10"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1actuator_1_1_bldc.html#a5f653e25984ae11ae7f513e1fbad7d10">UseDefaultPlot</a> (<a class="el" href="classflair_1_1gui_1_1_tab_widget.html">gui::TabWidget</a> *tabwidget)</td></tr>
<tr class="memdesc:a5f653e25984ae11ae7f513e1fbad7d10"><td class="mdescLeft">&#160;</td><td class="mdescRight">Use default plot.  <a href="#a5f653e25984ae11ae7f513e1fbad7d10">More...</a><br /></td></tr>
<tr class="separator:a5f653e25984ae11ae7f513e1fbad7d10"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d0ed04a12dfcb381cfabd887279df6f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classflair_1_1core_1_1cvmatrix.html">core::cvmatrix</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1actuator_1_1_bldc.html#a8d0ed04a12dfcb381cfabd887279df6f">Output</a> (void) const </td></tr>
<tr class="memdesc:a8d0ed04a12dfcb381cfabd887279df6f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Output from motors.  <a href="#a8d0ed04a12dfcb381cfabd887279df6f">More...</a><br /></td></tr>
<tr class="separator:a8d0ed04a12dfcb381cfabd887279df6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba973fd0797e039fc33c720729215570"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1actuator_1_1_bldc.html#aba973fd0797e039fc33c720729215570">MotorsCount</a> (void) const </td></tr>
<tr class="memdesc:aba973fd0797e039fc33c720729215570"><td class="mdescLeft">&#160;</td><td class="mdescRight">Motors count.  <a href="#aba973fd0797e039fc33c720729215570">More...</a><br /></td></tr>
<tr class="separator:aba973fd0797e039fc33c720729215570"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac030794b46b72db4184592f7cff11731"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1actuator_1_1_bldc.html#ac030794b46b72db4184592f7cff11731">SetEnabled</a> (bool status)</td></tr>
<tr class="memdesc:ac030794b46b72db4184592f7cff11731"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable motors.  <a href="#ac030794b46b72db4184592f7cff11731">More...</a><br /></td></tr>
<tr class="separator:ac030794b46b72db4184592f7cff11731"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82ad883235b4477905ef78b4daf8dccf"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1actuator_1_1_bldc.html#a82ad883235b4477905ef78b4daf8dccf">AreEnabled</a> (void) const </td></tr>
<tr class="memdesc:a82ad883235b4477905ef78b4daf8dccf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Are motors enabled?  <a href="#a82ad883235b4477905ef78b4daf8dccf">More...</a><br /></td></tr>
<tr class="separator:a82ad883235b4477905ef78b4daf8dccf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae040c7faecb20b538da7932a3a2e589f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1actuator_1_1_bldc.html#ae040c7faecb20b538da7932a3a2e589f">SetPower</a> (int motor_id, float value)</td></tr>
<tr class="memdesc:ae040c7faecb20b538da7932a3a2e589f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set motor power.  <a href="#ae040c7faecb20b538da7932a3a2e589f">More...</a><br /></td></tr>
<tr class="separator:ae040c7faecb20b538da7932a3a2e589f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a330135b8772cff48754df0e4f720cd0b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classflair_1_1gui_1_1_layout.html">gui::Layout</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1actuator_1_1_bldc.html#a330135b8772cff48754df0e4f720cd0b">GetLayout</a> (void) const </td></tr>
<tr class="memdesc:a330135b8772cff48754df0e4f720cd0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Layout.  <a href="#a330135b8772cff48754df0e4f720cd0b">More...</a><br /></td></tr>
<tr class="separator:a330135b8772cff48754df0e4f720cd0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37cf2c11de84720a8549f184d3fd3c1a"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1actuator_1_1_bldc.html#a37cf2c11de84720a8549f184d3fd3c1a">HasSpeedMeasurement</a> (void) const =0</td></tr>
<tr class="memdesc:a37cf2c11de84720a8549f184d3fd3c1a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Has speed measurement.  <a href="#a37cf2c11de84720a8549f184d3fd3c1a">More...</a><br /></td></tr>
<tr class="separator:a37cf2c11de84720a8549f184d3fd3c1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab69754edb7248757135740a1ced9169"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1actuator_1_1_bldc.html#aab69754edb7248757135740a1ced9169">HasCurrentMeasurement</a> (void) const =0</td></tr>
<tr class="memdesc:aab69754edb7248757135740a1ced9169"><td class="mdescLeft">&#160;</td><td class="mdescRight">Has current measurement.  <a href="#aab69754edb7248757135740a1ced9169">More...</a><br /></td></tr>
<tr class="separator:aab69754edb7248757135740a1ced9169"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classflair_1_1core_1_1_i_o_device"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classflair_1_1core_1_1_i_o_device')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classflair_1_1core_1_1_i_o_device.html">flair::core::IODevice</a></td></tr>
<tr class="memitem:a9693b497752b466891eaafeb34bec4d3 inherit pub_methods_classflair_1_1core_1_1_i_o_device"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_i_o_device.html#a9693b497752b466891eaafeb34bec4d3">IODevice</a> (const <a class="el" href="classflair_1_1core_1_1_object.html">Object</a> *parent, std::string name)</td></tr>
<tr class="memdesc:a9693b497752b466891eaafeb34bec4d3 inherit pub_methods_classflair_1_1core_1_1_i_o_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a9693b497752b466891eaafeb34bec4d3">More...</a><br /></td></tr>
<tr class="separator:a9693b497752b466891eaafeb34bec4d3 inherit pub_methods_classflair_1_1core_1_1_i_o_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05246988b486def40926d8491e1bcc5f inherit pub_methods_classflair_1_1core_1_1_i_o_device"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_i_o_device.html#a05246988b486def40926d8491e1bcc5f">~IODevice</a> ()</td></tr>
<tr class="memdesc:a05246988b486def40926d8491e1bcc5f inherit pub_methods_classflair_1_1core_1_1_i_o_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a05246988b486def40926d8491e1bcc5f">More...</a><br /></td></tr>
<tr class="separator:a05246988b486def40926d8491e1bcc5f inherit pub_methods_classflair_1_1core_1_1_i_o_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7b42de6bb3893df860063228b55c229 inherit pub_methods_classflair_1_1core_1_1_i_o_device"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_i_o_device.html#af7b42de6bb3893df860063228b55c229">AddDeviceToLog</a> (const <a class="el" href="classflair_1_1core_1_1_i_o_device.html">IODevice</a> *device)</td></tr>
<tr class="memdesc:af7b42de6bb3893df860063228b55c229 inherit pub_methods_classflair_1_1core_1_1_i_o_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add an <a class="el" href="classflair_1_1core_1_1_i_o_device.html" title="Abstract class for input/ouput system. ">IODevice</a> to the logs.  <a href="#af7b42de6bb3893df860063228b55c229">More...</a><br /></td></tr>
<tr class="separator:af7b42de6bb3893df860063228b55c229 inherit pub_methods_classflair_1_1core_1_1_i_o_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e0b7af75abdbf39843d8bf2e45f08b9 inherit pub_methods_classflair_1_1core_1_1_i_o_device"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_i_o_device.html#a2e0b7af75abdbf39843d8bf2e45f08b9">AddDataToLog</a> (const <a class="el" href="classflair_1_1core_1_1io__data.html">io_data</a> *data)</td></tr>
<tr class="memdesc:a2e0b7af75abdbf39843d8bf2e45f08b9 inherit pub_methods_classflair_1_1core_1_1_i_o_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add an <a class="el" href="classflair_1_1core_1_1io__data.html" title="Abstract class for data types. ">io_data</a> to the log.  <a href="#a2e0b7af75abdbf39843d8bf2e45f08b9">More...</a><br /></td></tr>
<tr class="separator:a2e0b7af75abdbf39843d8bf2e45f08b9 inherit pub_methods_classflair_1_1core_1_1_i_o_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12d811c6926fb86da6b47f889109da66 inherit pub_methods_classflair_1_1core_1_1_i_o_device"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_i_o_device.html#a12d811c6926fb86da6b47f889109da66">OutputToShMem</a> (bool enabled)</td></tr>
<tr class="memdesc:a12d811c6926fb86da6b47f889109da66 inherit pub_methods_classflair_1_1core_1_1_i_o_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send the output to a shared memory.  <a href="#a12d811c6926fb86da6b47f889109da66">More...</a><br /></td></tr>
<tr class="separator:a12d811c6926fb86da6b47f889109da66 inherit pub_methods_classflair_1_1core_1_1_i_o_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75e82ca2ae2fb7c39d973dd3d16bc698 inherit pub_methods_classflair_1_1core_1_1_i_o_device"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a75e82ca2ae2fb7c39d973dd3d16bc698"></a>
virtual <a class="el" href="classflair_1_1core_1_1_data_type.html">DataType</a> const &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetInputDataType</b> () const </td></tr>
<tr class="separator:a75e82ca2ae2fb7c39d973dd3d16bc698 inherit pub_methods_classflair_1_1core_1_1_i_o_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa325be57d48b268006120dde75dd65cc inherit pub_methods_classflair_1_1core_1_1_i_o_device"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa325be57d48b268006120dde75dd65cc"></a>
virtual <a class="el" href="classflair_1_1core_1_1_data_type.html">DataType</a> const &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetOutputDataType</b> () const </td></tr>
<tr class="separator:aa325be57d48b268006120dde75dd65cc inherit pub_methods_classflair_1_1core_1_1_i_o_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classflair_1_1core_1_1_object"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classflair_1_1core_1_1_object')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classflair_1_1core_1_1_object.html">flair::core::Object</a></td></tr>
<tr class="memitem:aec92383fd5bf68d9df10414862b7e95c inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#aec92383fd5bf68d9df10414862b7e95c">Object</a> (const <a class="el" href="classflair_1_1core_1_1_object.html">Object</a> *parent=NULL, std::string name=&quot;&quot;, std::string type=&quot;&quot;)</td></tr>
<tr class="memdesc:aec92383fd5bf68d9df10414862b7e95c inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#aec92383fd5bf68d9df10414862b7e95c">More...</a><br /></td></tr>
<tr class="separator:aec92383fd5bf68d9df10414862b7e95c inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2bde0e6677bbef705c96c93cb06ad09 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#aa2bde0e6677bbef705c96c93cb06ad09">~Object</a> ()</td></tr>
<tr class="memdesc:aa2bde0e6677bbef705c96c93cb06ad09 inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#aa2bde0e6677bbef705c96c93cb06ad09">More...</a><br /></td></tr>
<tr class="separator:aa2bde0e6677bbef705c96c93cb06ad09 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b0344dff7e1c05424d9152c8274523a inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#a9b0344dff7e1c05424d9152c8274523a">ObjectName</a> (void) const </td></tr>
<tr class="memdesc:a9b0344dff7e1c05424d9152c8274523a inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Name.  <a href="#a9b0344dff7e1c05424d9152c8274523a">More...</a><br /></td></tr>
<tr class="separator:a9b0344dff7e1c05424d9152c8274523a inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a609a250ec037fbcaf8957c8f1dcbfc53 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#a609a250ec037fbcaf8957c8f1dcbfc53">ObjectType</a> (void) const </td></tr>
<tr class="memdesc:a609a250ec037fbcaf8957c8f1dcbfc53 inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type.  <a href="#a609a250ec037fbcaf8957c8f1dcbfc53">More...</a><br /></td></tr>
<tr class="separator:a609a250ec037fbcaf8957c8f1dcbfc53 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a360c112cc3017a5152ebf6e84d2efa70 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classflair_1_1core_1_1_object.html">Object</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#a360c112cc3017a5152ebf6e84d2efa70">Parent</a> (void) const </td></tr>
<tr class="memdesc:a360c112cc3017a5152ebf6e84d2efa70 inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parent.  <a href="#a360c112cc3017a5152ebf6e84d2efa70">More...</a><br /></td></tr>
<tr class="separator:a360c112cc3017a5152ebf6e84d2efa70 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae22db4d723ec2d50b3ba48f26a6a770c inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">std::vector&lt; const <a class="el" href="classflair_1_1core_1_1_object.html">Object</a> * &gt; *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#ae22db4d723ec2d50b3ba48f26a6a770c">TypeChilds</a> (void) const </td></tr>
<tr class="memdesc:ae22db4d723ec2d50b3ba48f26a6a770c inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Childs of the same type.  <a href="#ae22db4d723ec2d50b3ba48f26a6a770c">More...</a><br /></td></tr>
<tr class="separator:ae22db4d723ec2d50b3ba48f26a6a770c inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a344f81cd35805a9501098bf727ac1a10 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">std::vector&lt; const <a class="el" href="classflair_1_1core_1_1_object.html">Object</a> * &gt; *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#a344f81cd35805a9501098bf727ac1a10">Childs</a> (void) const </td></tr>
<tr class="memdesc:a344f81cd35805a9501098bf727ac1a10 inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Childs.  <a href="#a344f81cd35805a9501098bf727ac1a10">More...</a><br /></td></tr>
<tr class="separator:a344f81cd35805a9501098bf727ac1a10 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af001feba14fc053aa778e61080a0b4cf inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#af001feba14fc053aa778e61080a0b4cf">Information</a> (const char *function, int line, const char *format,...) const </td></tr>
<tr class="memdesc:af001feba14fc053aa778e61080a0b4cf inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Formatted information.  <a href="#af001feba14fc053aa778e61080a0b4cf">More...</a><br /></td></tr>
<tr class="separator:af001feba14fc053aa778e61080a0b4cf inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a168b18451b2ee6126e1e81d452005ff6 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#a168b18451b2ee6126e1e81d452005ff6">Warning</a> (const char *function, const char *format,...) const </td></tr>
<tr class="memdesc:a168b18451b2ee6126e1e81d452005ff6 inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Formatted warning.  <a href="#a168b18451b2ee6126e1e81d452005ff6">More...</a><br /></td></tr>
<tr class="separator:a168b18451b2ee6126e1e81d452005ff6 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ca9694d29ec2b0491739879685df5ca inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#a3ca9694d29ec2b0491739879685df5ca">Error</a> (const char *function, const char *format,...) const </td></tr>
<tr class="memdesc:a3ca9694d29ec2b0491739879685df5ca inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Formatted error.  <a href="#a3ca9694d29ec2b0491739879685df5ca">More...</a><br /></td></tr>
<tr class="separator:a3ca9694d29ec2b0491739879685df5ca inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36cdd7f556e78b1bddd1d1fe4264bb85 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#a36cdd7f556e78b1bddd1d1fe4264bb85">ErrorOccured</a> (bool recursive=true) const </td></tr>
<tr class="memdesc:a36cdd7f556e78b1bddd1d1fe4264bb85 inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Has an errror occured?  <a href="#a36cdd7f556e78b1bddd1d1fe4264bb85">More...</a><br /></td></tr>
<tr class="separator:a36cdd7f556e78b1bddd1d1fe4264bb85 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a252a95e3889319f90e4afd82ac6d1400"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a252a95e3889319f90e4afd82ac6d1400"></a>
<a class="el" href="classflair_1_1core_1_1cvmatrix.html">core::cvmatrix</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>output</b></td></tr>
<tr class="separator:a252a95e3889319f90e4afd82ac6d1400"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classflair_1_1core_1_1_object"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classflair_1_1core_1_1_object')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classflair_1_1core_1_1_object.html">flair::core::Object</a></td></tr>
<tr class="memitem:aed5fccda511f97487040fed29f4efc97 inherit pub_types_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aed5fccda511f97487040fed29f4efc97"></a>enum &#160;</td><td class="memItemRight" valign="bottom"><b>color_t</b> { <b>Auto</b> = 0, 
<b>Red</b> = 31, 
<b>Green</b> = 32, 
<b>Orange</b> = 33
 }</td></tr>
<tr class="separator:aed5fccda511f97487040fed29f4efc97 inherit pub_types_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_attribs_classflair_1_1core_1_1_i_o_device"><td colspan="2" onclick="javascript:toggleInherit('pub_attribs_classflair_1_1core_1_1_i_o_device')"><img src="closed.png" alt="-"/>&#160;Public Attributes inherited from <a class="el" href="classflair_1_1core_1_1_i_o_device.html">flair::core::IODevice</a></td></tr>
<tr class="memitem:a5b701dbf27a7b1210bf7daf176e4e9b6 inherit pub_attribs_classflair_1_1core_1_1_i_o_device"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5b701dbf27a7b1210bf7daf176e4e9b6"></a>
<a class="el" href="namespaceflair_1_1core.html#acc0fa041e08ecf73b2d1d723c339a736">Time</a>&#160;</td><td class="memItemRight" valign="bottom"><b>lastUpdate</b></td></tr>
<tr class="separator:a5b701dbf27a7b1210bf7daf176e4e9b6 inherit pub_attribs_classflair_1_1core_1_1_i_o_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classflair_1_1core_1_1_i_o_device"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classflair_1_1core_1_1_i_o_device')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classflair_1_1core_1_1_i_o_device.html">flair::core::IODevice</a></td></tr>
<tr class="memitem:a3df9057ae23eb34f1b1dae8e7a4a9efc inherit pro_methods_classflair_1_1core_1_1_i_o_device"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_i_o_device.html#a3df9057ae23eb34f1b1dae8e7a4a9efc">ProcessUpdate</a> (<a class="el" href="classflair_1_1core_1_1io__data.html">io_data</a> *data)</td></tr>
<tr class="memdesc:a3df9057ae23eb34f1b1dae8e7a4a9efc inherit pro_methods_classflair_1_1core_1_1_i_o_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Process the childs of type <a class="el" href="classflair_1_1core_1_1_i_o_device.html" title="Abstract class for input/ouput system. ">IODevice</a>, and log if needed.  <a href="#a3df9057ae23eb34f1b1dae8e7a4a9efc">More...</a><br /></td></tr>
<tr class="separator:a3df9057ae23eb34f1b1dae8e7a4a9efc inherit pro_methods_classflair_1_1core_1_1_i_o_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Base class for brushless motors drivers. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="acb60358e96275823a489fb2d18a0d119"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">flair::actuator::Bldc::Bldc </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_i_o_device.html">core::IODevice</a> *&#160;</td>
          <td class="paramname"><em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classflair_1_1gui_1_1_layout.html">gui::Layout</a> *&#160;</td>
          <td class="paramname"><em>layout</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>motors_count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<p>Construct a <a class="el" href="classflair_1_1actuator_1_1_bldc.html" title="Base class for brushless motors drivers. ">Bldc</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parent</td><td>parent </td></tr>
    <tr><td class="paramname">layout</td><td>layout </td></tr>
    <tr><td class="paramname">name</td><td>name </td></tr>
    <tr><td class="paramname">motors_count</td><td>number of motors </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a35ff4113cea48bfd002d425d2e1b5d49"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">flair::actuator::Bldc::Bldc </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_object.html">core::Object</a> *&#160;</td>
          <td class="paramname"><em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>motors_count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<p>Construct a <a class="el" href="classflair_1_1actuator_1_1_bldc.html" title="Base class for brushless motors drivers. ">Bldc</a>. <br />
This contructor must only be called for a simulated device.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parent</td><td>parent </td></tr>
    <tr><td class="paramname">name</td><td>name </td></tr>
    <tr><td class="paramname">motors_count</td><td>number of motors </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1569d6c4eed96b9f53cae6cd027b7608"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">flair::actuator::Bldc::~Bldc </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a6c1d6173c5dcc0fa550464268847ca91"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::actuator::Bldc::LockUserInterface </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Lock user interface. </p>

</div>
</div>
<a class="anchor" id="ac1fba30ad70a6d8ff075d376c0e417dd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::actuator::Bldc::UnlockUserInterface </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Unlock user interface. </p>

</div>
</div>
<a class="anchor" id="a5f653e25984ae11ae7f513e1fbad7d10"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::actuator::Bldc::UseDefaultPlot </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classflair_1_1gui_1_1_tab_widget.html">gui::TabWidget</a> *&#160;</td>
          <td class="paramname"><em>tabwidget</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Use default plot. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tabwidget</td><td>TabWidget to draw plots </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a8d0ed04a12dfcb381cfabd887279df6f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classflair_1_1core_1_1cvmatrix.html">core::cvmatrix</a>* flair::actuator::Bldc::Output </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Output from motors. </p>
<p>First column is real speed if available, secund column is current if available </p>

</div>
</div>
<a class="anchor" id="aba973fd0797e039fc33c720729215570"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t flair::actuator::Bldc::MotorsCount </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Motors count. </p>
<dl class="section return"><dt>Returns</dt><dd>number of motors </dd></dl>

</div>
</div>
<a class="anchor" id="ac030794b46b72db4184592f7cff11731"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::actuator::Bldc::SetEnabled </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>status</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable motors. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">true</td><td>to enable all motors </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a82ad883235b4477905ef78b4daf8dccf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool flair::actuator::Bldc::AreEnabled </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Are motors enabled? </p>
<dl class="section return"><dt>Returns</dt><dd>true if motors are enabled </dd></dl>

</div>
</div>
<a class="anchor" id="ae040c7faecb20b538da7932a3a2e589f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::actuator::Bldc::SetPower </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>motor_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set motor power. </p>
<p>Changes the power (from 0 to 1) of a specific motor. <br />
 By default power is set to 1 for each motor which has no effect. <br />
 A value &lt;1 will decrease the power of a motor sent to the reimplemented <a class="el" href="classflair_1_1actuator_1_1_bldc.html" title="Base class for brushless motors drivers. ">Bldc</a> class through SetMotors. <br />
 The power value is applied after applying saturation between min value and max value. So the resulting value cannot be higher than max value but it can be lower than min value.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">motor_id</td><td>id of the motor </td></tr>
    <tr><td class="paramname">value</td><td>power value (from 0 to 1) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a330135b8772cff48754df0e4f720cd0b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classflair_1_1gui_1_1_layout.html">gui::Layout</a>* flair::actuator::Bldc::GetLayout </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Layout. </p>
<p>This the same Layout as passed to the constructor</p>
<dl class="section return"><dt>Returns</dt><dd>a Layout </dd></dl>

</div>
</div>
<a class="anchor" id="a37cf2c11de84720a8549f184d3fd3c1a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool flair::actuator::Bldc::HasSpeedMeasurement </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Has speed measurement. </p>
<dl class="section return"><dt>Returns</dt><dd>true if it has speed measurement </dd></dl>

<p>Implemented in <a class="el" href="classflair_1_1actuator_1_1_simu_bldc.html#a6d604089c8494c27f8382359327e7fb6">flair::actuator::SimuBldc</a>, <a class="el" href="classflair_1_1actuator_1_1_bl_ctrl_v2.html#a0600320a8939d1faffe2936f7b445c6e">flair::actuator::BlCtrlV2</a>, <a class="el" href="classflair_1_1actuator_1_1_afro_bldc.html#ae22a92ad5fa166179218934808a286c7">flair::actuator::AfroBldc</a>, and <a class="el" href="classflair_1_1actuator_1_1_x_bldc.html#a3f9c8671568a5106a9a03b9043cbb7a9">flair::actuator::XBldc</a>.</p>

</div>
</div>
<a class="anchor" id="aab69754edb7248757135740a1ced9169"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool flair::actuator::Bldc::HasCurrentMeasurement </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Has current measurement. </p>
<dl class="section return"><dt>Returns</dt><dd>true if it has current measurement </dd></dl>

<p>Implemented in <a class="el" href="classflair_1_1actuator_1_1_simu_bldc.html#a3a97075384649f5a11fd70bf7749fbe1">flair::actuator::SimuBldc</a>, <a class="el" href="classflair_1_1actuator_1_1_bl_ctrl_v2.html#af7067266decd1bb523469fbc15c43cbe">flair::actuator::BlCtrlV2</a>, <a class="el" href="classflair_1_1actuator_1_1_afro_bldc.html#a7aa850b8506c65ec465e0b5872cc6dfd">flair::actuator::AfroBldc</a>, and <a class="el" href="classflair_1_1actuator_1_1_x_bldc.html#ab02c1cd6f84f8b4089012afa27b37853">flair::actuator::XBldc</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceflair.html">flair</a></li><li class="navelem"><a class="el" href="namespaceflair_1_1actuator.html">actuator</a></li><li class="navelem"><a class="el" href="classflair_1_1actuator_1_1_bldc.html">Bldc</a></li>
    <li class="footer">Generated on Thu Nov 3 2016 10:06:12 for Flair by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.9.1 </li>
  </ul>
</div>
</body>
</html>
