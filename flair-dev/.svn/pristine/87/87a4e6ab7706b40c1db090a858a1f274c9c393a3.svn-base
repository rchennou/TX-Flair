<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.9.1"/>
<title>Flair: flair::core::Thread Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_hds.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Flair
   </div>
   <div id="projectbrief">Framework Libre Air</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.9.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.html"><span>Class&#160;List</span></a></li>
      <li><a href="classes.html"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.html"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classflair_1_1core_1_1_thread.html','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="classflair_1_1core_1_1_thread-members.html">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">flair::core::Thread Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Abstract class for a thread.  
 <a href="classflair_1_1core_1_1_thread.html#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_thread_8h_source.html">Thread.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for flair::core::Thread:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
 <div class="center">
  <img src="classflair_1_1core_1_1_thread.png" usemap="#flair::core::Thread_map" alt=""/>
  <map id="flair::core::Thread_map" name="flair::core::Thread_map">
<area href="classflair_1_1core_1_1_object.html" title="Base class for all Framework&#39;s classes. " alt="flair::core::Object" shape="rect" coords="0,0,200,24"/>
<area href="classflair_1_1actuator_1_1_bl_ctrl_v2__x4__speed.html" alt="flair::actuator::BlCtrlV2_x4_speed" shape="rect" coords="210,112,410,136"/>
<area href="classflair_1_1core_1_1_watchdog.html" title="Watchdog class. " alt="flair::core::Watchdog" shape="rect" coords="210,168,410,192"/>
<area href="classflair_1_1meta_1_1_uav_state_machine.html" title="State machine for UAV. " alt="flair::meta::UavStateMachine" shape="rect" coords="210,224,410,248"/>
<area href="classflair_1_1sensor_1_1_gx3__25__imu.html" title="Class for 3dmgx3-25 Imu. " alt="flair::sensor::Gx3_25_imu" shape="rect" coords="210,280,410,304"/>
<area href="classflair_1_1sensor_1_1_hokuyo_u_t_m30_lx.html" title="Classe intÃ©grant le telemetre laser Hokuyo UTM 30lx. " alt="flair::sensor::HokuyoUTM30Lx" shape="rect" coords="210,336,410,360"/>
<area href="classflair_1_1sensor_1_1_host_eth_controller.html" title="Base Class for host side remote controls that talks to target side through ethernet connection..." alt="flair::sensor::HostEthController" shape="rect" coords="210,392,410,416"/>
<area href="classflair_1_1sensor_1_1_mb800.html" title="Class for mb800 gps receiver. " alt="flair::sensor::Mb800" shape="rect" coords="210,448,410,472"/>
<area href="classflair_1_1sensor_1_1_novatel.html" title="Class for Novatel gps receiver. " alt="flair::sensor::Novatel" shape="rect" coords="210,504,410,528"/>
<area href="classflair_1_1sensor_1_1_simu_camera.html" title="Class for a simulation camera. " alt="flair::sensor::SimuCamera" shape="rect" coords="210,560,410,584"/>
<area href="classflair_1_1sensor_1_1_simu_gps.html" title="Class for a simulation GPS. " alt="flair::sensor::SimuGps" shape="rect" coords="210,616,410,640"/>
<area href="classflair_1_1sensor_1_1_simu_imu.html" title="Class for a simulation Imu. " alt="flair::sensor::SimuImu" shape="rect" coords="210,672,410,696"/>
<area href="classflair_1_1sensor_1_1_simu_laser.html" alt="flair::sensor::SimuLaser" shape="rect" coords="210,728,410,752"/>
<area href="classflair_1_1sensor_1_1_simu_us.html" title="Class for a simulation UsRangeFinder. " alt="flair::sensor::SimuUs" shape="rect" coords="210,784,410,808"/>
<area href="classflair_1_1sensor_1_1_srf08.html" title="Class for ultra sonic SRF08. " alt="flair::sensor::Srf08" shape="rect" coords="210,840,410,864"/>
<area href="classflair_1_1sensor_1_1_target_controller.html" title="Base Class for target side remote controls. " alt="flair::sensor::TargetController" shape="rect" coords="210,896,410,920"/>
<area href="classflair_1_1sensor_1_1_v4_l_camera.html" title="Base class for V4l camera. " alt="flair::sensor::V4LCamera" shape="rect" coords="210,952,410,976"/>
<area href="classflair_1_1sensor_1_1_vrpn_client.html" title="Class to connect to a Vrpn server. " alt="flair::sensor::VrpnClient" shape="rect" coords="210,1008,410,1032"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5ef98773d91697e162ab30b89528b007"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_thread.html#a5ef98773d91697e162ab30b89528b007">Thread</a> (const <a class="el" href="classflair_1_1core_1_1_object.html">Object</a> *parent, std::string name, uint8_t priority)</td></tr>
<tr class="memdesc:a5ef98773d91697e162ab30b89528b007"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a5ef98773d91697e162ab30b89528b007">More...</a><br /></td></tr>
<tr class="separator:a5ef98773d91697e162ab30b89528b007"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39ede97ff3addeaf48ecec09c6625655"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_thread.html#a39ede97ff3addeaf48ecec09c6625655">~Thread</a> ()</td></tr>
<tr class="memdesc:a39ede97ff3addeaf48ecec09c6625655"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a39ede97ff3addeaf48ecec09c6625655">More...</a><br /></td></tr>
<tr class="separator:a39ede97ff3addeaf48ecec09c6625655"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a4f0f27689ae4292f81bf45e22998a5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_thread.html#a5a4f0f27689ae4292f81bf45e22998a5">Start</a> (void)</td></tr>
<tr class="memdesc:a5a4f0f27689ae4292f81bf45e22998a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start the thread.  <a href="#a5a4f0f27689ae4292f81bf45e22998a5">More...</a><br /></td></tr>
<tr class="separator:a5a4f0f27689ae4292f81bf45e22998a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa1fb0f8d5b18273394502159dd5dcef"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_thread.html#afa1fb0f8d5b18273394502159dd5dcef">SafeStop</a> (void)</td></tr>
<tr class="memdesc:afa1fb0f8d5b18273394502159dd5dcef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set a stop flag.  <a href="#afa1fb0f8d5b18273394502159dd5dcef">More...</a><br /></td></tr>
<tr class="separator:afa1fb0f8d5b18273394502159dd5dcef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcbb4a445fe287b8608b173bdc10f056"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_thread.html#afcbb4a445fe287b8608b173bdc10f056">ToBeStopped</a> (void) const </td></tr>
<tr class="memdesc:afcbb4a445fe287b8608b173bdc10f056"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set a stop flag.  <a href="#afcbb4a445fe287b8608b173bdc10f056">More...</a><br /></td></tr>
<tr class="separator:afcbb4a445fe287b8608b173bdc10f056"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba8b31e2e4c1beccb31333beb8bd41a4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_thread.html#aba8b31e2e4c1beccb31333beb8bd41a4">Join</a> (void)</td></tr>
<tr class="memdesc:aba8b31e2e4c1beccb31333beb8bd41a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Join the thread.  <a href="#aba8b31e2e4c1beccb31333beb8bd41a4">More...</a><br /></td></tr>
<tr class="separator:aba8b31e2e4c1beccb31333beb8bd41a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a581ae3bdecef47c916671a6aafec9509"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_thread.html#a581ae3bdecef47c916671a6aafec9509">SetPeriodUS</a> (uint32_t period_us)</td></tr>
<tr class="memdesc:a581ae3bdecef47c916671a6aafec9509"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the period in micro second.  <a href="#a581ae3bdecef47c916671a6aafec9509">More...</a><br /></td></tr>
<tr class="separator:a581ae3bdecef47c916671a6aafec9509"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab58a00466581b6cf88ba28b8e2118c65"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab58a00466581b6cf88ba28b8e2118c65"></a>
uint32_t&#160;</td><td class="memItemRight" valign="bottom"><b>GetPeriodUS</b> () const </td></tr>
<tr class="separator:ab58a00466581b6cf88ba28b8e2118c65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37d13f12283d69ebd092a7cc01a7d742"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_thread.html#a37d13f12283d69ebd092a7cc01a7d742">SetPeriodMS</a> (uint32_t period_ms)</td></tr>
<tr class="memdesc:a37d13f12283d69ebd092a7cc01a7d742"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the period in milli second.  <a href="#a37d13f12283d69ebd092a7cc01a7d742">More...</a><br /></td></tr>
<tr class="separator:a37d13f12283d69ebd092a7cc01a7d742"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afaa77472d57848bed10204ee5ec1d75a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afaa77472d57848bed10204ee5ec1d75a"></a>
uint32_t&#160;</td><td class="memItemRight" valign="bottom"><b>GetPeriodMS</b> () const </td></tr>
<tr class="separator:afaa77472d57848bed10204ee5ec1d75a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af892a1b3025cb842cad8e7f2a11a9526"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_thread.html#af892a1b3025cb842cad8e7f2a11a9526">IsPeriodSet</a> (void)</td></tr>
<tr class="memdesc:af892a1b3025cb842cad8e7f2a11a9526"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns if period was set.  <a href="#af892a1b3025cb842cad8e7f2a11a9526">More...</a><br /></td></tr>
<tr class="separator:af892a1b3025cb842cad8e7f2a11a9526"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50cd2ea88d538e10a30c3e6a5286a944"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_thread.html#a50cd2ea88d538e10a30c3e6a5286a944">WaitPeriod</a> (void) const </td></tr>
<tr class="memdesc:a50cd2ea88d538e10a30c3e6a5286a944"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wait the period.  <a href="#a50cd2ea88d538e10a30c3e6a5286a944">More...</a><br /></td></tr>
<tr class="separator:a50cd2ea88d538e10a30c3e6a5286a944"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b5b5f3cf400729419bd864b654af252"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_thread.html#a2b5b5f3cf400729419bd864b654af252">WaitUpdate</a> (const <a class="el" href="classflair_1_1core_1_1_i_o_device.html">IODevice</a> *device)</td></tr>
<tr class="memdesc:a2b5b5f3cf400729419bd864b654af252"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wait update of an <a class="el" href="classflair_1_1core_1_1_i_o_device.html" title="Abstract class for input/ouput system. ">IODevice</a>.  <a href="#a2b5b5f3cf400729419bd864b654af252">More...</a><br /></td></tr>
<tr class="separator:a2b5b5f3cf400729419bd864b654af252"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e5fc8919ed6042e5736a5dca5ba546b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_thread.html#a0e5fc8919ed6042e5736a5dca5ba546b">Suspend</a> (void)</td></tr>
<tr class="memdesc:a0e5fc8919ed6042e5736a5dca5ba546b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Suspend the thread.  <a href="#a0e5fc8919ed6042e5736a5dca5ba546b">More...</a><br /></td></tr>
<tr class="separator:a0e5fc8919ed6042e5736a5dca5ba546b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af93c2461c31a6c16958bc44189ab4253"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_thread.html#af93c2461c31a6c16958bc44189ab4253">SuspendUntil</a> (<a class="el" href="namespaceflair_1_1core.html#acc0fa041e08ecf73b2d1d723c339a736">Time</a> date)</td></tr>
<tr class="memdesc:af93c2461c31a6c16958bc44189ab4253"><td class="mdescLeft">&#160;</td><td class="mdescRight">Suspend the thread with timeout.  <a href="#af93c2461c31a6c16958bc44189ab4253">More...</a><br /></td></tr>
<tr class="separator:af93c2461c31a6c16958bc44189ab4253"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7c46910a801f1b16302570ad8ae9580"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_thread.html#ae7c46910a801f1b16302570ad8ae9580">Resume</a> (void)</td></tr>
<tr class="memdesc:ae7c46910a801f1b16302570ad8ae9580"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resume the thread.  <a href="#ae7c46910a801f1b16302570ad8ae9580">More...</a><br /></td></tr>
<tr class="separator:ae7c46910a801f1b16302570ad8ae9580"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adac9a6d336bdb50bcfa24c66943a355a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_thread.html#adac9a6d336bdb50bcfa24c66943a355a">IsSuspended</a> (void) const </td></tr>
<tr class="memdesc:adac9a6d336bdb50bcfa24c66943a355a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is the thread suspended?  <a href="#adac9a6d336bdb50bcfa24c66943a355a">More...</a><br /></td></tr>
<tr class="separator:adac9a6d336bdb50bcfa24c66943a355a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac09a2d745af3dbb42371949d4c622011"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_thread.html#ac09a2d745af3dbb42371949d4c622011">SleepUntil</a> (<a class="el" href="namespaceflair_1_1core.html#acc0fa041e08ecf73b2d1d723c339a736">Time</a> time) const </td></tr>
<tr class="memdesc:ac09a2d745af3dbb42371949d4c622011"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sleep until absolute time.  <a href="#ac09a2d745af3dbb42371949d4c622011">More...</a><br /></td></tr>
<tr class="separator:ac09a2d745af3dbb42371949d4c622011"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3479727dfaf2213f7866fccadb43eeb6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_thread.html#a3479727dfaf2213f7866fccadb43eeb6">SleepUS</a> (uint32_t time_us) const </td></tr>
<tr class="memdesc:a3479727dfaf2213f7866fccadb43eeb6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sleep for a certain time in micro second.  <a href="#a3479727dfaf2213f7866fccadb43eeb6">More...</a><br /></td></tr>
<tr class="separator:a3479727dfaf2213f7866fccadb43eeb6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a501e7802d7edd7e6167d111c803b8349"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_thread.html#a501e7802d7edd7e6167d111c803b8349">SleepMS</a> (uint32_t time_ms) const </td></tr>
<tr class="memdesc:a501e7802d7edd7e6167d111c803b8349"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sleep for a cartain time in milli second.  <a href="#a501e7802d7edd7e6167d111c803b8349">More...</a><br /></td></tr>
<tr class="separator:a501e7802d7edd7e6167d111c803b8349"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classflair_1_1core_1_1_object"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classflair_1_1core_1_1_object')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classflair_1_1core_1_1_object.html">flair::core::Object</a></td></tr>
<tr class="memitem:aec92383fd5bf68d9df10414862b7e95c inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#aec92383fd5bf68d9df10414862b7e95c">Object</a> (const <a class="el" href="classflair_1_1core_1_1_object.html">Object</a> *parent=NULL, std::string name=&quot;&quot;, std::string type=&quot;&quot;)</td></tr>
<tr class="memdesc:aec92383fd5bf68d9df10414862b7e95c inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#aec92383fd5bf68d9df10414862b7e95c">More...</a><br /></td></tr>
<tr class="separator:aec92383fd5bf68d9df10414862b7e95c inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2bde0e6677bbef705c96c93cb06ad09 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#aa2bde0e6677bbef705c96c93cb06ad09">~Object</a> ()</td></tr>
<tr class="memdesc:aa2bde0e6677bbef705c96c93cb06ad09 inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#aa2bde0e6677bbef705c96c93cb06ad09">More...</a><br /></td></tr>
<tr class="separator:aa2bde0e6677bbef705c96c93cb06ad09 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b0344dff7e1c05424d9152c8274523a inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#a9b0344dff7e1c05424d9152c8274523a">ObjectName</a> (void) const </td></tr>
<tr class="memdesc:a9b0344dff7e1c05424d9152c8274523a inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Name.  <a href="#a9b0344dff7e1c05424d9152c8274523a">More...</a><br /></td></tr>
<tr class="separator:a9b0344dff7e1c05424d9152c8274523a inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a609a250ec037fbcaf8957c8f1dcbfc53 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#a609a250ec037fbcaf8957c8f1dcbfc53">ObjectType</a> (void) const </td></tr>
<tr class="memdesc:a609a250ec037fbcaf8957c8f1dcbfc53 inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type.  <a href="#a609a250ec037fbcaf8957c8f1dcbfc53">More...</a><br /></td></tr>
<tr class="separator:a609a250ec037fbcaf8957c8f1dcbfc53 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a360c112cc3017a5152ebf6e84d2efa70 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classflair_1_1core_1_1_object.html">Object</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#a360c112cc3017a5152ebf6e84d2efa70">Parent</a> (void) const </td></tr>
<tr class="memdesc:a360c112cc3017a5152ebf6e84d2efa70 inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parent.  <a href="#a360c112cc3017a5152ebf6e84d2efa70">More...</a><br /></td></tr>
<tr class="separator:a360c112cc3017a5152ebf6e84d2efa70 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae22db4d723ec2d50b3ba48f26a6a770c inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">std::vector&lt; const <a class="el" href="classflair_1_1core_1_1_object.html">Object</a> * &gt; *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#ae22db4d723ec2d50b3ba48f26a6a770c">TypeChilds</a> (void) const </td></tr>
<tr class="memdesc:ae22db4d723ec2d50b3ba48f26a6a770c inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Childs of the same type.  <a href="#ae22db4d723ec2d50b3ba48f26a6a770c">More...</a><br /></td></tr>
<tr class="separator:ae22db4d723ec2d50b3ba48f26a6a770c inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a344f81cd35805a9501098bf727ac1a10 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">std::vector&lt; const <a class="el" href="classflair_1_1core_1_1_object.html">Object</a> * &gt; *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#a344f81cd35805a9501098bf727ac1a10">Childs</a> (void) const </td></tr>
<tr class="memdesc:a344f81cd35805a9501098bf727ac1a10 inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Childs.  <a href="#a344f81cd35805a9501098bf727ac1a10">More...</a><br /></td></tr>
<tr class="separator:a344f81cd35805a9501098bf727ac1a10 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af001feba14fc053aa778e61080a0b4cf inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#af001feba14fc053aa778e61080a0b4cf">Information</a> (const char *function, int line, const char *format,...) const </td></tr>
<tr class="memdesc:af001feba14fc053aa778e61080a0b4cf inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Formatted information.  <a href="#af001feba14fc053aa778e61080a0b4cf">More...</a><br /></td></tr>
<tr class="separator:af001feba14fc053aa778e61080a0b4cf inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a168b18451b2ee6126e1e81d452005ff6 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#a168b18451b2ee6126e1e81d452005ff6">Warning</a> (const char *function, const char *format,...) const </td></tr>
<tr class="memdesc:a168b18451b2ee6126e1e81d452005ff6 inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Formatted warning.  <a href="#a168b18451b2ee6126e1e81d452005ff6">More...</a><br /></td></tr>
<tr class="separator:a168b18451b2ee6126e1e81d452005ff6 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ca9694d29ec2b0491739879685df5ca inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#a3ca9694d29ec2b0491739879685df5ca">Error</a> (const char *function, const char *format,...) const </td></tr>
<tr class="memdesc:a3ca9694d29ec2b0491739879685df5ca inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Formatted error.  <a href="#a3ca9694d29ec2b0491739879685df5ca">More...</a><br /></td></tr>
<tr class="separator:a3ca9694d29ec2b0491739879685df5ca inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36cdd7f556e78b1bddd1d1fe4264bb85 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#a36cdd7f556e78b1bddd1d1fe4264bb85">ErrorOccured</a> (bool recursive=true) const </td></tr>
<tr class="memdesc:a36cdd7f556e78b1bddd1d1fe4264bb85 inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Has an errror occured?  <a href="#a36cdd7f556e78b1bddd1d1fe4264bb85">More...</a><br /></td></tr>
<tr class="separator:a36cdd7f556e78b1bddd1d1fe4264bb85 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a7fbf5ad201e7e802f0fa127891849dc9"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_thread.html#a7fbf5ad201e7e802f0fa127891849dc9">WarnUponSwitches</a> (bool enable)</td></tr>
<tr class="memdesc:a7fbf5ad201e7e802f0fa127891849dc9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Warn if real time / non real time switches occur.  <a href="#a7fbf5ad201e7e802f0fa127891849dc9">More...</a><br /></td></tr>
<tr class="separator:a7fbf5ad201e7e802f0fa127891849dc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classflair_1_1core_1_1_object"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classflair_1_1core_1_1_object')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classflair_1_1core_1_1_object.html">flair::core::Object</a></td></tr>
<tr class="memitem:aed5fccda511f97487040fed29f4efc97 inherit pub_types_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aed5fccda511f97487040fed29f4efc97"></a>enum &#160;</td><td class="memItemRight" valign="bottom"><b>color_t</b> { <b>Auto</b> = 0, 
<b>Red</b> = 31, 
<b>Green</b> = 32, 
<b>Orange</b> = 33
 }</td></tr>
<tr class="separator:aed5fccda511f97487040fed29f4efc97 inherit pub_types_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Abstract class for a thread. </p>
<p>To implement a thread, Run() method must be reimplemented. <br />
 When <a class="el" href="classflair_1_1core_1_1_thread.html#a5a4f0f27689ae4292f81bf45e22998a5" title="Start the thread. ">Start()</a> is called, it will automatically call Run() reimplemented method. A thread can be periodic, in this case <a class="el" href="classflair_1_1core_1_1_thread.html#a50cd2ea88d538e10a30c3e6a5286a944" title="Wait the period. ">WaitPeriod()</a> will block untill period is met. <a class="el" href="classflair_1_1core_1_1_thread.html" title="Abstract class for a thread. ">Thread</a> can also e synnchronized with an <a class="el" href="classflair_1_1core_1_1_i_o_device.html" title="Abstract class for input/ouput system. ">IODevice</a>, using <a class="el" href="classflair_1_1core_1_1_thread.html#a2b5b5f3cf400729419bd864b654af252" title="Wait update of an IODevice. ">WaitUpdate()</a> method. <br />
 <a class="el" href="classflair_1_1core_1_1_thread.html" title="Abstract class for a thread. ">Thread</a> period is by default 100ms. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a5ef98773d91697e162ab30b89528b007"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">flair::core::Thread::Thread </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_object.html">Object</a> *&#160;</td>
          <td class="paramname"><em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>priority</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parent</td><td>parent </td></tr>
    <tr><td class="paramname">name</td><td>name </td></tr>
    <tr><td class="paramname">priority</td><td>priority, should be &gt;20 (&lt;20 is reserved for internal use) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a39ede97ff3addeaf48ecec09c6625655"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual flair::core::Thread::~Thread </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>
<p>If thread is started, <a class="el" href="classflair_1_1core_1_1_thread.html#afa1fb0f8d5b18273394502159dd5dcef" title="Set a stop flag. ">SafeStop()</a> and <a class="el" href="classflair_1_1core_1_1_thread.html#aba8b31e2e4c1beccb31333beb8bd41a4" title="Join the thread. ">Join()</a> will be automatically called. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a5a4f0f27689ae4292f81bf45e22998a5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::core::Thread::Start </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Start the thread. </p>

</div>
</div>
<a class="anchor" id="afa1fb0f8d5b18273394502159dd5dcef"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::core::Thread::SafeStop </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set a stop flag. </p>
<p><a class="el" href="classflair_1_1core_1_1_thread.html#afcbb4a445fe287b8608b173bdc10f056" title="Set a stop flag. ">ToBeStopped()</a> will return true after calling this method. </p>

</div>
</div>
<a class="anchor" id="afcbb4a445fe287b8608b173bdc10f056"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool flair::core::Thread::ToBeStopped </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set a stop flag. </p>
<p>Reimplemented Run() can poll this method to determine when to stop the thread.</p>
<dl class="section return"><dt>Returns</dt><dd>true if <a class="el" href="classflair_1_1core_1_1_thread.html#afa1fb0f8d5b18273394502159dd5dcef" title="Set a stop flag. ">SafeStop()</a> was called </dd></dl>

</div>
</div>
<a class="anchor" id="aba8b31e2e4c1beccb31333beb8bd41a4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::core::Thread::Join </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Join the thread. </p>
<p>This method will block untill Run() returns. </p>

</div>
</div>
<a class="anchor" id="a581ae3bdecef47c916671a6aafec9509"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::core::Thread::SetPeriodUS </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>period_us</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the period in micro second. </p>
<p>After calling this method, IsPeriodSet will return true.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">period_us</td><td>period in us </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a37d13f12283d69ebd092a7cc01a7d742"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::core::Thread::SetPeriodMS </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>period_ms</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the period in milli second. </p>
<p>After calling this method, IsPeriodSet will return true.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">period_ums</td><td>period in ms </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af892a1b3025cb842cad8e7f2a11a9526"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool flair::core::Thread::IsPeriodSet </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns if period was set. </p>
<dl class="section return"><dt>Returns</dt><dd>true if a period was set using SetPeriodUS or SetPeriodMS false otherwise </dd></dl>

</div>
</div>
<a class="anchor" id="a50cd2ea88d538e10a30c3e6a5286a944"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::core::Thread::WaitPeriod </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Wait the period. </p>
<p>This method will block untill period is met. <br />
 If no period was set (see SetPeriodUS, SetPeriodMS and IsPeriodSet), this method returns immediately. </p>

</div>
</div>
<a class="anchor" id="a2b5b5f3cf400729419bd864b654af252"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int flair::core::Thread::WaitUpdate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_i_o_device.html">IODevice</a> *&#160;</td>
          <td class="paramname"><em>device</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Wait update of an <a class="el" href="classflair_1_1core_1_1_i_o_device.html" title="Abstract class for input/ouput system. ">IODevice</a>. </p>
<p>This method will block untill <a class="el" href="classflair_1_1core_1_1_i_o_device.html#a3df9057ae23eb34f1b1dae8e7a4a9efc" title="Process the childs of type IODevice, and log if needed. ">IODevice::ProcessUpdate</a> is called. <br />
This method is usefull to synchronize a thread with an <a class="el" href="classflair_1_1core_1_1_i_o_device.html" title="Abstract class for input/ouput system. ">IODevice</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">device</td><td><a class="el" href="classflair_1_1core_1_1_i_o_device.html" title="Abstract class for input/ouput system. ">IODevice</a> to wait update from </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a0e5fc8919ed6042e5736a5dca5ba546b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::core::Thread::Suspend </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Suspend the thread. </p>
<p>This method will block untill <a class="el" href="classflair_1_1core_1_1_thread.html#ae7c46910a801f1b16302570ad8ae9580" title="Resume the thread. ">Resume()</a> is called. </p>

</div>
</div>
<a class="anchor" id="af93c2461c31a6c16958bc44189ab4253"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool flair::core::Thread::SuspendUntil </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceflair_1_1core.html#acc0fa041e08ecf73b2d1d723c339a736">Time</a>&#160;</td>
          <td class="paramname"><em>date</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Suspend the thread with timeout. </p>
<p>This method will block until <a class="el" href="classflair_1_1core_1_1_thread.html#ae7c46910a801f1b16302570ad8ae9580" title="Resume the thread. ">Resume()</a> is called or the absolute date specified occurs</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">date</td><td>absolute date in ns </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if thread is woken up by a call to Resume, false otherwise </dd></dl>

</div>
</div>
<a class="anchor" id="ae7c46910a801f1b16302570ad8ae9580"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::core::Thread::Resume </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Resume the thread. </p>
<p>This method will unblock the call to <a class="el" href="classflair_1_1core_1_1_thread.html#a0e5fc8919ed6042e5736a5dca5ba546b" title="Suspend the thread. ">Suspend()</a>. </p>

</div>
</div>
<a class="anchor" id="adac9a6d336bdb50bcfa24c66943a355a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool flair::core::Thread::IsSuspended </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Is the thread suspended? </p>
<dl class="section return"><dt>Returns</dt><dd>true if thread is suspended </dd></dl>

</div>
</div>
<a class="anchor" id="ac09a2d745af3dbb42371949d4c622011"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::core::Thread::SleepUntil </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceflair_1_1core.html#acc0fa041e08ecf73b2d1d723c339a736">Time</a>&#160;</td>
          <td class="paramname"><em>time</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sleep until absolute time. </p>
<p>This method will block untill time is reached.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">time</td><td>absolute time </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a3479727dfaf2213f7866fccadb43eeb6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::core::Thread::SleepUS </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>time_us</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sleep for a certain time in micro second. </p>
<p>This method will block untill time is elapsed.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">time_us</td><td>time to wait in micro second </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a501e7802d7edd7e6167d111c803b8349"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::core::Thread::SleepMS </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>time_ms</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sleep for a cartain time in milli second. </p>
<p>This method will block untill time is elapsed.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">time_ms</td><td>time to wait in milli second </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a7fbf5ad201e7e802f0fa127891849dc9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void flair::core::Thread::WarnUponSwitches </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Warn if real time / non real time switches occur. </p>
<p>If enabled, a message with the call stack will be displayed in case of real time / non real time switches. <br />
This method can help to debug application and see if switches occur. <br />
Note that it as no effect if this method is called from the non real time Framework library.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">enable</td><td>enable or disable warns </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceflair.html">flair</a></li><li class="navelem"><a class="el" href="namespaceflair_1_1core.html">core</a></li><li class="navelem"><a class="el" href="classflair_1_1core_1_1_thread.html">Thread</a></li>
    <li class="footer">Generated on Thu Nov 3 2016 10:06:12 for Flair by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.9.1 </li>
  </ul>
</div>
</body>
</html>
