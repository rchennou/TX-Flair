<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.9.1"/>
<title>Flair: flair::core::FrameworkManager Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_hds.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Flair
   </div>
   <div id="projectbrief">Framework Libre Air</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.9.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.html"><span>Class&#160;List</span></a></li>
      <li><a href="classes.html"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.html"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classflair_1_1core_1_1_framework_manager.html','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classflair_1_1core_1_1_framework_manager-members.html">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">flair::core::FrameworkManager Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Main class of the Framework library.  
 <a href="classflair_1_1core_1_1_framework_manager.html#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_framework_manager_8h_source.html">FrameworkManager.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for flair::core::FrameworkManager:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
 <div class="center">
  <img src="classflair_1_1core_1_1_framework_manager.png" usemap="#flair::core::FrameworkManager_map" alt=""/>
  <map id="flair::core::FrameworkManager_map" name="flair::core::FrameworkManager_map">
<area href="classflair_1_1core_1_1_object.html" title="Base class for all Framework&#39;s classes. " alt="flair::core::Object" shape="rect" coords="0,0,186,24"/>
<area href="classflair_1_1simulator_1_1_simulator.html" alt="flair::simulator::Simulator" shape="rect" coords="0,112,186,136"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac4488013eb79fb1cd0c57fe4774120ae"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_framework_manager.html#ac4488013eb79fb1cd0c57fe4774120ae">FrameworkManager</a> (std::string name)</td></tr>
<tr class="memdesc:ac4488013eb79fb1cd0c57fe4774120ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#ac4488013eb79fb1cd0c57fe4774120ae">More...</a><br /></td></tr>
<tr class="separator:ac4488013eb79fb1cd0c57fe4774120ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa97c7fbaba572aa856d23c416f3b74e4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_framework_manager.html#aa97c7fbaba572aa856d23c416f3b74e4">~FrameworkManager</a> ()</td></tr>
<tr class="memdesc:aa97c7fbaba572aa856d23c416f3b74e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#aa97c7fbaba572aa856d23c416f3b74e4">More...</a><br /></td></tr>
<tr class="separator:aa97c7fbaba572aa856d23c416f3b74e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a536f78b53e6f4890120b1312aa3c7b88"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_framework_manager.html#a536f78b53e6f4890120b1312aa3c7b88">SetupConnection</a> (std::string address, uint16_t port, <a class="el" href="namespaceflair_1_1core.html#acc0fa041e08ecf73b2d1d723c339a736">Time</a> watchdogTimeout=(<a class="el" href="namespaceflair_1_1core.html#acc0fa041e08ecf73b2d1d723c339a736">Time</a>) 1000000000, size_t rcv_buf_size=10000)</td></tr>
<tr class="memdesc:a536f78b53e6f4890120b1312aa3c7b88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setup the connection with ground station.  <a href="#a536f78b53e6f4890120b1312aa3c7b88">More...</a><br /></td></tr>
<tr class="separator:a536f78b53e6f4890120b1312aa3c7b88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a528ab69c3a850237007a074732d9fa85"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_framework_manager.html#a528ab69c3a850237007a074732d9fa85">SetupUserInterface</a> (std::string xml_file)</td></tr>
<tr class="memdesc:a528ab69c3a850237007a074732d9fa85"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setup the user interface.  <a href="#a528ab69c3a850237007a074732d9fa85">More...</a><br /></td></tr>
<tr class="separator:a528ab69c3a850237007a074732d9fa85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f3989b0199826a913f352cc1e26f86b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classflair_1_1gui_1_1_tab_widget.html">gui::TabWidget</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_framework_manager.html#a8f3989b0199826a913f352cc1e26f86b">GetTabWidget</a> (void) const </td></tr>
<tr class="memdesc:a8f3989b0199826a913f352cc1e26f86b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get TabWidget.  <a href="#a8f3989b0199826a913f352cc1e26f86b">More...</a><br /></td></tr>
<tr class="separator:a8f3989b0199826a913f352cc1e26f86b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0b1886b695379518bfeff9142d32405"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_framework_manager.html#ac0b1886b695379518bfeff9142d32405">SetupLogger</a> (std::string log_path)</td></tr>
<tr class="memdesc:ac0b1886b695379518bfeff9142d32405"><td class="mdescLeft">&#160;</td><td class="mdescRight">Logger setup.  <a href="#ac0b1886b695379518bfeff9142d32405">More...</a><br /></td></tr>
<tr class="separator:ac0b1886b695379518bfeff9142d32405"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f2750ce913b492206761340c666bbb6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_framework_manager.html#a9f2750ce913b492206761340c666bbb6">AddDeviceToLog</a> (<a class="el" href="classflair_1_1core_1_1_i_o_device.html">IODevice</a> *device)</td></tr>
<tr class="memdesc:a9f2750ce913b492206761340c666bbb6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add log element.  <a href="#a9f2750ce913b492206761340c666bbb6">More...</a><br /></td></tr>
<tr class="separator:a9f2750ce913b492206761340c666bbb6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1cbc5e8296c0f36551210e13251516ae"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_framework_manager.html#a1cbc5e8296c0f36551210e13251516ae">StartLog</a> (void)</td></tr>
<tr class="memdesc:a1cbc5e8296c0f36551210e13251516ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start logging.  <a href="#a1cbc5e8296c0f36551210e13251516ae">More...</a><br /></td></tr>
<tr class="separator:a1cbc5e8296c0f36551210e13251516ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a978aae4beac0c20dbbff73369ab6e31a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_framework_manager.html#a978aae4beac0c20dbbff73369ab6e31a">StopLog</a> (void)</td></tr>
<tr class="memdesc:a978aae4beac0c20dbbff73369ab6e31a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stop logging.  <a href="#a978aae4beac0c20dbbff73369ab6e31a">More...</a><br /></td></tr>
<tr class="separator:a978aae4beac0c20dbbff73369ab6e31a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65eff6c3651dafddc2dd55c3cab281b4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_framework_manager.html#a65eff6c3651dafddc2dd55c3cab281b4">IsLogging</a> (void) const </td></tr>
<tr class="memdesc:a65eff6c3651dafddc2dd55c3cab281b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is logging?  <a href="#a65eff6c3651dafddc2dd55c3cab281b4">More...</a><br /></td></tr>
<tr class="separator:a65eff6c3651dafddc2dd55c3cab281b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ed9bdb73288176aa58269f8a520d58c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_framework_manager.html#a6ed9bdb73288176aa58269f8a520d58c">UpdateSendData</a> (const <a class="el" href="classflair_1_1gui_1_1_send_data.html">gui::SendData</a> *obj)</td></tr>
<tr class="memdesc:a6ed9bdb73288176aa58269f8a520d58c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Notify that SendData's period has changed.  <a href="#a6ed9bdb73288176aa58269f8a520d58c">More...</a><br /></td></tr>
<tr class="separator:a6ed9bdb73288176aa58269f8a520d58c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1b6474b3972665d20c706ff89965271"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_framework_manager.html#aa1b6474b3972665d20c706ff89965271">BlockCom</a> (void)</td></tr>
<tr class="memdesc:aa1b6474b3972665d20c706ff89965271"><td class="mdescLeft">&#160;</td><td class="mdescRight">Block communication.  <a href="#aa1b6474b3972665d20c706ff89965271">More...</a><br /></td></tr>
<tr class="separator:aa1b6474b3972665d20c706ff89965271"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a311fa9be9c08b037cae24061e85307d1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_framework_manager.html#a311fa9be9c08b037cae24061e85307d1">UnBlockCom</a> (void)</td></tr>
<tr class="memdesc:a311fa9be9c08b037cae24061e85307d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unblock communication.  <a href="#a311fa9be9c08b037cae24061e85307d1">More...</a><br /></td></tr>
<tr class="separator:a311fa9be9c08b037cae24061e85307d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a845ac3ad0cbc95d71e50277d9e8093a1"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_framework_manager.html#a845ac3ad0cbc95d71e50277d9e8093a1">ConnectionLost</a> (void) const </td></tr>
<tr class="memdesc:a845ac3ad0cbc95d71e50277d9e8093a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is connection lost?  <a href="#a845ac3ad0cbc95d71e50277d9e8093a1">More...</a><br /></td></tr>
<tr class="separator:a845ac3ad0cbc95d71e50277d9e8093a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69e12f51081a3d58876553d9858ea1bd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_framework_manager.html#a69e12f51081a3d58876553d9858ea1bd">DisableErrorsDisplay</a> (bool value)</td></tr>
<tr class="memdesc:a69e12f51081a3d58876553d9858ea1bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disable errors display.  <a href="#a69e12f51081a3d58876553d9858ea1bd">More...</a><br /></td></tr>
<tr class="separator:a69e12f51081a3d58876553d9858ea1bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a477b3cee8fa2c2338896006faaeefe42"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_framework_manager.html#a477b3cee8fa2c2338896006faaeefe42">IsDisplayingErrors</a> (void) const </td></tr>
<tr class="memdesc:a477b3cee8fa2c2338896006faaeefe42"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is displaying errors?  <a href="#a477b3cee8fa2c2338896006faaeefe42">More...</a><br /></td></tr>
<tr class="separator:a477b3cee8fa2c2338896006faaeefe42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classflair_1_1core_1_1_object"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classflair_1_1core_1_1_object')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classflair_1_1core_1_1_object.html">flair::core::Object</a></td></tr>
<tr class="memitem:aec92383fd5bf68d9df10414862b7e95c inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#aec92383fd5bf68d9df10414862b7e95c">Object</a> (const <a class="el" href="classflair_1_1core_1_1_object.html">Object</a> *parent=NULL, std::string name=&quot;&quot;, std::string type=&quot;&quot;)</td></tr>
<tr class="memdesc:aec92383fd5bf68d9df10414862b7e95c inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#aec92383fd5bf68d9df10414862b7e95c">More...</a><br /></td></tr>
<tr class="separator:aec92383fd5bf68d9df10414862b7e95c inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2bde0e6677bbef705c96c93cb06ad09 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#aa2bde0e6677bbef705c96c93cb06ad09">~Object</a> ()</td></tr>
<tr class="memdesc:aa2bde0e6677bbef705c96c93cb06ad09 inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#aa2bde0e6677bbef705c96c93cb06ad09">More...</a><br /></td></tr>
<tr class="separator:aa2bde0e6677bbef705c96c93cb06ad09 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b0344dff7e1c05424d9152c8274523a inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#a9b0344dff7e1c05424d9152c8274523a">ObjectName</a> (void) const </td></tr>
<tr class="memdesc:a9b0344dff7e1c05424d9152c8274523a inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Name.  <a href="#a9b0344dff7e1c05424d9152c8274523a">More...</a><br /></td></tr>
<tr class="separator:a9b0344dff7e1c05424d9152c8274523a inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a609a250ec037fbcaf8957c8f1dcbfc53 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#a609a250ec037fbcaf8957c8f1dcbfc53">ObjectType</a> (void) const </td></tr>
<tr class="memdesc:a609a250ec037fbcaf8957c8f1dcbfc53 inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type.  <a href="#a609a250ec037fbcaf8957c8f1dcbfc53">More...</a><br /></td></tr>
<tr class="separator:a609a250ec037fbcaf8957c8f1dcbfc53 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a360c112cc3017a5152ebf6e84d2efa70 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classflair_1_1core_1_1_object.html">Object</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#a360c112cc3017a5152ebf6e84d2efa70">Parent</a> (void) const </td></tr>
<tr class="memdesc:a360c112cc3017a5152ebf6e84d2efa70 inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parent.  <a href="#a360c112cc3017a5152ebf6e84d2efa70">More...</a><br /></td></tr>
<tr class="separator:a360c112cc3017a5152ebf6e84d2efa70 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae22db4d723ec2d50b3ba48f26a6a770c inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">std::vector&lt; const <a class="el" href="classflair_1_1core_1_1_object.html">Object</a> * &gt; *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#ae22db4d723ec2d50b3ba48f26a6a770c">TypeChilds</a> (void) const </td></tr>
<tr class="memdesc:ae22db4d723ec2d50b3ba48f26a6a770c inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Childs of the same type.  <a href="#ae22db4d723ec2d50b3ba48f26a6a770c">More...</a><br /></td></tr>
<tr class="separator:ae22db4d723ec2d50b3ba48f26a6a770c inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a344f81cd35805a9501098bf727ac1a10 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">std::vector&lt; const <a class="el" href="classflair_1_1core_1_1_object.html">Object</a> * &gt; *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#a344f81cd35805a9501098bf727ac1a10">Childs</a> (void) const </td></tr>
<tr class="memdesc:a344f81cd35805a9501098bf727ac1a10 inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Childs.  <a href="#a344f81cd35805a9501098bf727ac1a10">More...</a><br /></td></tr>
<tr class="separator:a344f81cd35805a9501098bf727ac1a10 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af001feba14fc053aa778e61080a0b4cf inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#af001feba14fc053aa778e61080a0b4cf">Information</a> (const char *function, int line, const char *format,...) const </td></tr>
<tr class="memdesc:af001feba14fc053aa778e61080a0b4cf inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Formatted information.  <a href="#af001feba14fc053aa778e61080a0b4cf">More...</a><br /></td></tr>
<tr class="separator:af001feba14fc053aa778e61080a0b4cf inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a168b18451b2ee6126e1e81d452005ff6 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#a168b18451b2ee6126e1e81d452005ff6">Warning</a> (const char *function, const char *format,...) const </td></tr>
<tr class="memdesc:a168b18451b2ee6126e1e81d452005ff6 inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Formatted warning.  <a href="#a168b18451b2ee6126e1e81d452005ff6">More...</a><br /></td></tr>
<tr class="separator:a168b18451b2ee6126e1e81d452005ff6 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ca9694d29ec2b0491739879685df5ca inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#a3ca9694d29ec2b0491739879685df5ca">Error</a> (const char *function, const char *format,...) const </td></tr>
<tr class="memdesc:a3ca9694d29ec2b0491739879685df5ca inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Formatted error.  <a href="#a3ca9694d29ec2b0491739879685df5ca">More...</a><br /></td></tr>
<tr class="separator:a3ca9694d29ec2b0491739879685df5ca inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36cdd7f556e78b1bddd1d1fe4264bb85 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html#a36cdd7f556e78b1bddd1d1fe4264bb85">ErrorOccured</a> (bool recursive=true) const </td></tr>
<tr class="memdesc:a36cdd7f556e78b1bddd1d1fe4264bb85 inherit pub_methods_classflair_1_1core_1_1_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Has an errror occured?  <a href="#a36cdd7f556e78b1bddd1d1fe4264bb85">More...</a><br /></td></tr>
<tr class="separator:a36cdd7f556e78b1bddd1d1fe4264bb85 inherit pub_methods_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classflair_1_1core_1_1_object"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classflair_1_1core_1_1_object')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classflair_1_1core_1_1_object.html">flair::core::Object</a></td></tr>
<tr class="memitem:aed5fccda511f97487040fed29f4efc97 inherit pub_types_classflair_1_1core_1_1_object"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aed5fccda511f97487040fed29f4efc97"></a>enum &#160;</td><td class="memItemRight" valign="bottom"><b>color_t</b> { <b>Auto</b> = 0, 
<b>Red</b> = 31, 
<b>Green</b> = 32, 
<b>Orange</b> = 33
 }</td></tr>
<tr class="separator:aed5fccda511f97487040fed29f4efc97 inherit pub_types_classflair_1_1core_1_1_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Main class of the Framework library. </p>
<p>This is the main class of the library. Only one instance of this class is allowed by program. Morevoer, its name must be unique if more than one program using this class is running on the same system (a control and a simlator for example). <br />
 This class allows: <br />
 -connexion with ground station, <br />
 -creation of a <a class="elRef" target="_blank" doxygen="/home/gsanahuj/igep/flair-dev/doc/qt.tag:http://qt-project.org/doc/qt-4.8/" href="http://qt-project.org/doc/qt-4.8/qtabwidget.html">QTabWidget</a> on ground station, <br />
 -handling of xml files, used for default values of Widgets, <br />
 -logging of datas. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ac4488013eb79fb1cd0c57fe4774120ae"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">flair::core::FrameworkManager::FrameworkManager </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<p>Construct a <a class="el" href="classflair_1_1core_1_1_framework_manager.html" title="Main class of the Framework library. ">FrameworkManager</a>. <br />
 Call SetupConnection method just after this constructor to setup the conection with a ground station.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>name, must be unique </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa97c7fbaba572aa856d23c416f3b74e4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">flair::core::FrameworkManager::~FrameworkManager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destructor. </p>
<p>Calling it will automatically destruct all childs. <br />
Destruction implies destruction of the <a class="elRef" target="_blank" doxygen="/home/gsanahuj/igep/flair-dev/doc/qt.tag:http://qt-project.org/doc/qt-4.8/" href="http://qt-project.org/doc/qt-4.8/qtabwidget.html">QTabWidget</a> on ground station. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a536f78b53e6f4890120b1312aa3c7b88"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::core::FrameworkManager::SetupConnection </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>address</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceflair_1_1core.html#acc0fa041e08ecf73b2d1d723c339a736">Time</a>&#160;</td>
          <td class="paramname"><em>watchdogTimeout</em> = <code>(<a class="el" href="namespaceflair_1_1core.html#acc0fa041e08ecf73b2d1d723c339a736">Time</a>)&#160;1000000000</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>rcv_buf_size</em> = <code>10000</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Setup the connection with ground station. </p>
<p>Call this method just after the constructor of this class. If this method is not called, the program will run headless. If this method is called, SetupUserInterface must also be called after this.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">address</td><td>address of ground station </td></tr>
    <tr><td class="paramname">port</td><td>port of ground station </td></tr>
    <tr><td class="paramname">watchdogTimeout</td><td>watchdog timeout for the connection, passing TIME_INFINITE will disable the watchdog </td></tr>
    <tr><td class="paramname">rcv_buf_size</td><td>receive buffer size </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a528ab69c3a850237007a074732d9fa85"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::core::FrameworkManager::SetupUserInterface </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>xml_file</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Setup the user interface. </p>
<p>If this method is called after SetupConnection, Widgets will be displayed in the ground station. If this method is called and SetupConnection was not called, it will run headless but default values of Widgets will be taken from the xml file. If this method is not called, Widgets will not be available. Constructing an object based on Widget class will fail.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">xml_file</td><td>xml file for default values of Widgets </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a8f3989b0199826a913f352cc1e26f86b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classflair_1_1gui_1_1_tab_widget.html">gui::TabWidget</a>* flair::core::FrameworkManager::GetTabWidget </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get TabWidget. </p>
<dl class="section return"><dt>Returns</dt><dd>TabWidget </dd></dl>

</div>
</div>
<a class="anchor" id="ac0b1886b695379518bfeff9142d32405"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::core::FrameworkManager::SetupLogger </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>log_path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Logger setup. </p>
<p>Setup path of log files. <br />
No logging will be performed if this method is not called. <br />
 </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">log_path</td><td>path to store logs </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9f2750ce913b492206761340c666bbb6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::core::FrameworkManager::AddDeviceToLog </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classflair_1_1core_1_1_i_o_device.html">IODevice</a> *&#160;</td>
          <td class="paramname"><em>device</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add log element. </p>
<p>The added element will be automatically logged once logging started (see <a class="el" href="classflair_1_1core_1_1_framework_manager.html#a1cbc5e8296c0f36551210e13251516ae" title="Start logging. ">StartLog()</a>). <br />
This element must define on its side the <a class="el" href="classflair_1_1core_1_1io__data.html" title="Abstract class for data types. ">io_data</a> to log, trough IODevice::SetDataToLog method.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">device</td><td><a class="el" href="classflair_1_1core_1_1_i_o_device.html" title="Abstract class for input/ouput system. ">IODevice</a> to add </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1cbc5e8296c0f36551210e13251516ae"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::core::FrameworkManager::StartLog </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Start logging. </p>
<p>All <a class="el" href="classflair_1_1core_1_1_i_o_device.html" title="Abstract class for input/ouput system. ">IODevice</a> added through <a class="el" href="classflair_1_1core_1_1_framework_manager.html#a9f2750ce913b492206761340c666bbb6" title="Add log element. ">AddDeviceToLog()</a> method will automatically be logged. <br />
<a class="el" href="classflair_1_1core_1_1_framework_manager.html#ac0b1886b695379518bfeff9142d32405" title="Logger setup. ">SetupLogger()</a> must have been called before. </p>

</div>
</div>
<a class="anchor" id="a978aae4beac0c20dbbff73369ab6e31a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::core::FrameworkManager::StopLog </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Stop logging. </p>
<p>Logs will automatically be sent to ground station. </p>

</div>
</div>
<a class="anchor" id="a65eff6c3651dafddc2dd55c3cab281b4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool flair::core::FrameworkManager::IsLogging </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Is logging? </p>
<dl class="section return"><dt>Returns</dt><dd>true if is logging </dd></dl>

</div>
</div>
<a class="anchor" id="a6ed9bdb73288176aa58269f8a520d58c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::core::FrameworkManager::UpdateSendData </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classflair_1_1gui_1_1_send_data.html">gui::SendData</a> *&#160;</td>
          <td class="paramname"><em>obj</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Notify that SendData's period has changed. </p>
<p>This funtion must be called when the period has changed. <br />
Normally, it occurs in the Widget::XmlEvent method. <br />
This method must be called with communication blocked (see <a class="el" href="classflair_1_1core_1_1_framework_manager.html#aa1b6474b3972665d20c706ff89965271" title="Block communication. ">BlockCom()</a>).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">obj</td><td>SendData which changed </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa1b6474b3972665d20c706ff89965271"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::core::FrameworkManager::BlockCom </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Block communication. </p>
<p>This funtion blocks the communication beetween the program and ground station. <br />
 It must be called before changing datas or parameters exchanged between the program and the ground station. </p>

</div>
</div>
<a class="anchor" id="a311fa9be9c08b037cae24061e85307d1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::core::FrameworkManager::UnBlockCom </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Unblock communication. </p>
<p>This funtion unblocks the communication beetween the program and ground station. <br />
 It must be called after changing datas or parameters exchanged between the program and the ground station. </p>

</div>
</div>
<a class="anchor" id="a845ac3ad0cbc95d71e50277d9e8093a1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool flair::core::FrameworkManager::ConnectionLost </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Is connection lost? </p>
<p>Once this method returns true, it will never return false back. <br />
 Note that this method return false if no connection is defined (see SetupConnection).</p>
<dl class="section return"><dt>Returns</dt><dd>true if connection with ground station is lost </dd></dl>

</div>
</div>
<a class="anchor" id="a69e12f51081a3d58876553d9858ea1bd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::core::FrameworkManager::DisableErrorsDisplay </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disable errors display. </p>
<p>Disable errors display, if you do not want to saturate console for exemple. By defaults errors disply is enabled.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>true to disable errors display </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a477b3cee8fa2c2338896006faaeefe42"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool flair::core::FrameworkManager::IsDisplayingErrors </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Is displaying errors? </p>
<dl class="section return"><dt>Returns</dt><dd>true if errors display is enabled </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceflair.html">flair</a></li><li class="navelem"><a class="el" href="namespaceflair_1_1core.html">core</a></li><li class="navelem"><a class="el" href="classflair_1_1core_1_1_framework_manager.html">FrameworkManager</a></li>
    <li class="footer">Generated on Thu Nov 3 2016 10:06:12 for Flair by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.9.1 </li>
  </ul>
</div>
</body>
</html>
