<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.9.1"/>
<title>Flair: flair::core Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_hds.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Flair
   </div>
   <div id="projectbrief">Framework Libre Air</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.9.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li class="current"><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="namespaces.html"><span>Namespace&#160;List</span></a></li>
      <li><a href="namespacemembers.html"><span>Namespace&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('namespaceflair_1_1core.html','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">flair::core Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Core classes.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_ahrs_data.html">AhrsData</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class defining AHRS datas.  <a href="classflair_1_1core_1_1_ahrs_data.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_condition_variable.html">ConditionVariable</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class defining a condition variable.  <a href="classflair_1_1core_1_1_condition_variable.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_connected_socket.html">ConnectedSocket</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface class encapsulating a connected socket. Preserves packets order and guaranty delivery.  <a href="classflair_1_1core_1_1_connected_socket.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1cvimage.html">cvimage</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class defining an image of kind IplImage.  <a href="classflair_1_1core_1_1cvimage.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1cvmatrix.html">cvmatrix</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class defining a matrix of kind CvMat.  <a href="classflair_1_1core_1_1cvmatrix.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1cvmatrix__descriptor.html">cvmatrix_descriptor</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class describing cvmatrix elements, for log and graphs purpose.  <a href="classflair_1_1core_1_1cvmatrix__descriptor.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_data_type.html">DataType</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_double_type.html">DoubleType</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_dummy_type.html">DummyType</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_euler.html">Euler</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class defining euler angles.  <a href="classflair_1_1core_1_1_euler.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_float_type.html">FloatType</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_framework_manager.html">FrameworkManager</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Main class of the Framework library.  <a href="classflair_1_1core_1_1_framework_manager.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_geo_coordinate.html">GeoCoordinate</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class defining a point by its lla coordinates.  <a href="classflair_1_1core_1_1_geo_coordinate.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_gps_data.html">GpsData</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class defining gps datas.  <a href="classflair_1_1core_1_1_gps_data.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_i2c_port.html">I2cPort</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class for i2c port.  <a href="classflair_1_1core_1_1_i2c_port.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_imu_data.html">ImuData</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class defining IMU datas.  <a href="classflair_1_1core_1_1_imu_data.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1io__data.html">io_data</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Abstract class for data types.  <a href="classflair_1_1core_1_1io__data.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_i_o_data_element.html">IODataElement</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Abstract class for accessing an element of an <a class="el" href="classflair_1_1core_1_1io__data.html" title="Abstract class for data types. ">io_data</a>.  <a href="classflair_1_1core_1_1_i_o_data_element.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_i_o_device.html">IODevice</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Abstract class for input/ouput system.  <a href="classflair_1_1core_1_1_i_o_device.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_message.html">Message</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_mutex.html">Mutex</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class defining a mutex.  <a href="classflair_1_1core_1_1_mutex.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_object.html">Object</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class for all Framework's classes.  <a href="classflair_1_1core_1_1_object.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_one_axis_rotation.html">OneAxisRotation</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class defining a rotation around one axis.  <a href="classflair_1_1core_1_1_one_axis_rotation.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class defining a quaternion.  <a href="classflair_1_1core_1_1_quaternion.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_rotation_matrix.html">RotationMatrix</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class defining a rotation matrix.  <a href="classflair_1_1core_1_1_rotation_matrix.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_r_t_d_m___i2c_port.html">RTDM_I2cPort</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class for real time i2c port using RTDM.  <a href="classflair_1_1core_1_1_r_t_d_m___i2c_port.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_r_t_d_m___serial_port.html">RTDM_SerialPort</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class for real time serial port using RTDM.  <a href="classflair_1_1core_1_1_r_t_d_m___serial_port.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_scalar_type.html">ScalarType</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_serial_port.html">SerialPort</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class for serial port.  <a href="classflair_1_1core_1_1_serial_port.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_shared_mem.html">SharedMem</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class defining a shared memory.  <a href="classflair_1_1core_1_1_shared_mem.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_signed_integer_type.html">SignedIntegerType</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_socket.html">Socket</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class encapsulating a UDP socket. It assumes packets are coming from only one distant host on a given port.  <a href="classflair_1_1core_1_1_socket.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_tcp_socket.html">TcpSocket</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class encapsulating a TCP socket.  <a href="classflair_1_1core_1_1_tcp_socket.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_thread.html">Thread</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Abstract class for a thread.  <a href="classflair_1_1core_1_1_thread.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_udt_socket.html">UdtSocket</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class encapsulating a UDT socket.  <a href="classflair_1_1core_1_1_udt_socket.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_unix___i2c_port.html">Unix_I2cPort</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class for unix serial port.  <a href="classflair_1_1core_1_1_unix___i2c_port.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_unix___serial_port.html">Unix_SerialPort</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_unsigned_integer_type.html">UnsignedIntegerType</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class defining a 2D vector.  <a href="classflair_1_1core_1_1_vector2_d.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class defining a 3D vector.  <a href="classflair_1_1core_1_1_vector3_d.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_vector3_ddata.html">Vector3Ddata</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class defining a 3D vector and a <a class="el" href="classflair_1_1core_1_1io__data.html" title="Abstract class for data types. ">io_data</a> User must manually use the <a class="el" href="classflair_1_1core_1_1io__data.html" title="Abstract class for data types. ">io_data</a>'s <a class="el" href="classflair_1_1core_1_1_mutex.html" title="Class defining a mutex. ">Mutex</a> to access to <a class="el" href="classflair_1_1core_1_1_vector3_d.html" title="Class defining a 3D vector. ">Vector3D</a> values.  <a href="classflair_1_1core_1_1_vector3_ddata.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classflair_1_1core_1_1_watchdog.html">Watchdog</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classflair_1_1core_1_1_watchdog.html" title="Watchdog class. ">Watchdog</a> class.  <a href="classflair_1_1core_1_1_watchdog.html#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:acc0fa041e08ecf73b2d1d723c339a736"><td class="memItemLeft" align="right" valign="top">typedef unsigned long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#acc0fa041e08ecf73b2d1d723c339a736">Time</a></td></tr>
<tr class="memdesc:acc0fa041e08ecf73b2d1d723c339a736"><td class="mdescLeft">&#160;</td><td class="mdescRight">Time definition, in ns.  <a href="#acc0fa041e08ecf73b2d1d723c339a736">More...</a><br /></td></tr>
<tr class="separator:acc0fa041e08ecf73b2d1d723c339a736"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ace74842bdd3bf9d982724d868872eec2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classflair_1_1core_1_1_framework_manager.html">FrameworkManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#ace74842bdd3bf9d982724d868872eec2">getFrameworkManager</a> (void)</td></tr>
<tr class="memdesc:ace74842bdd3bf9d982724d868872eec2"><td class="mdescLeft">&#160;</td><td class="mdescRight">get <a class="el" href="classflair_1_1core_1_1_framework_manager.html" title="Main class of the Framework library. ">FrameworkManager</a>  <a href="#ace74842bdd3bf9d982724d868872eec2">More...</a><br /></td></tr>
<tr class="separator:ace74842bdd3bf9d982724d868872eec2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4783118d327bc3461f35818366dbd458"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#a4783118d327bc3461f35818366dbd458">IsBigEndian</a> (void)</td></tr>
<tr class="memdesc:a4783118d327bc3461f35818366dbd458"><td class="mdescLeft">&#160;</td><td class="mdescRight">is big endian?  <a href="#a4783118d327bc3461f35818366dbd458">More...</a><br /></td></tr>
<tr class="separator:a4783118d327bc3461f35818366dbd458"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63b4b9f532f414a0e0023acaf81f845e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceflair_1_1core.html#acc0fa041e08ecf73b2d1d723c339a736">Time</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#a63b4b9f532f414a0e0023acaf81f845e">GetTime</a> (void)</td></tr>
<tr class="memdesc:a63b4b9f532f414a0e0023acaf81f845e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Time.  <a href="#a63b4b9f532f414a0e0023acaf81f845e">More...</a><br /></td></tr>
<tr class="separator:a63b4b9f532f414a0e0023acaf81f845e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7fe0d3548e4e65719702a7fb29775b1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#aa7fe0d3548e4e65719702a7fb29775b1">Printf</a> (const char *format,...)</td></tr>
<tr class="memdesc:aa7fe0d3548e4e65719702a7fb29775b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Formatted print.  <a href="#aa7fe0d3548e4e65719702a7fb29775b1">More...</a><br /></td></tr>
<tr class="separator:aa7fe0d3548e4e65719702a7fb29775b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab372a1107820a30d6fcbef13c8989caa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#ab372a1107820a30d6fcbef13c8989caa">operator+</a> (<a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a> const &amp;quaterniontA, <a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a> const &amp;quaterniontB)</td></tr>
<tr class="memdesc:ab372a1107820a30d6fcbef13c8989caa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add.  <a href="#ab372a1107820a30d6fcbef13c8989caa">More...</a><br /></td></tr>
<tr class="separator:ab372a1107820a30d6fcbef13c8989caa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac696d4111ec3b0241bc094add5666245"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#ac696d4111ec3b0241bc094add5666245">operator-</a> (<a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a> const &amp;quaternionA, <a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a> const &amp;quaterniontB)</td></tr>
<tr class="memdesc:ac696d4111ec3b0241bc094add5666245"><td class="mdescLeft">&#160;</td><td class="mdescRight">Substract.  <a href="#ac696d4111ec3b0241bc094add5666245">More...</a><br /></td></tr>
<tr class="separator:ac696d4111ec3b0241bc094add5666245"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af80d99fd1ebc9ab4059ec19d5e9cf2a1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#af80d99fd1ebc9ab4059ec19d5e9cf2a1">operator-</a> (const <a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a> &amp;quaternion)</td></tr>
<tr class="memdesc:af80d99fd1ebc9ab4059ec19d5e9cf2a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Minus.  <a href="#af80d99fd1ebc9ab4059ec19d5e9cf2a1">More...</a><br /></td></tr>
<tr class="separator:af80d99fd1ebc9ab4059ec19d5e9cf2a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a25a222fe16e05be703de31123a6d11"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#a7a25a222fe16e05be703de31123a6d11">operator*</a> (<a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a> const &amp;quaternionA, <a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a> const &amp;quaterniontB)</td></tr>
<tr class="memdesc:a7a25a222fe16e05be703de31123a6d11"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiply.  <a href="#a7a25a222fe16e05be703de31123a6d11">More...</a><br /></td></tr>
<tr class="separator:a7a25a222fe16e05be703de31123a6d11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1344cd050aed7267279064d9f51e5bf3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#a1344cd050aed7267279064d9f51e5bf3">operator*</a> (float coeff, <a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a> const &amp;quaternion)</td></tr>
<tr class="memdesc:a1344cd050aed7267279064d9f51e5bf3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiply.  <a href="#a1344cd050aed7267279064d9f51e5bf3">More...</a><br /></td></tr>
<tr class="separator:a1344cd050aed7267279064d9f51e5bf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b293c3961eee927ab186df043028a4e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#a5b293c3961eee927ab186df043028a4e">operator*</a> (<a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a> const &amp;quaternion, float coeff)</td></tr>
<tr class="memdesc:a5b293c3961eee927ab186df043028a4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiply.  <a href="#a5b293c3961eee927ab186df043028a4e">More...</a><br /></td></tr>
<tr class="separator:a5b293c3961eee927ab186df043028a4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada20416deb1802b5f5deddb85f02b6ed"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#ada20416deb1802b5f5deddb85f02b6ed">operator+</a> (const <a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a> &amp;vectorA, const <a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a> &amp;vectorB)</td></tr>
<tr class="memdesc:ada20416deb1802b5f5deddb85f02b6ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add.  <a href="#ada20416deb1802b5f5deddb85f02b6ed">More...</a><br /></td></tr>
<tr class="separator:ada20416deb1802b5f5deddb85f02b6ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a601f3ca18a9e417dc2bb7d8eb2db7b42"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#a601f3ca18a9e417dc2bb7d8eb2db7b42">operator-</a> (const <a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a> &amp;vectorA, const <a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a> &amp;vectorB)</td></tr>
<tr class="memdesc:a601f3ca18a9e417dc2bb7d8eb2db7b42"><td class="mdescLeft">&#160;</td><td class="mdescRight">Substract.  <a href="#a601f3ca18a9e417dc2bb7d8eb2db7b42">More...</a><br /></td></tr>
<tr class="separator:a601f3ca18a9e417dc2bb7d8eb2db7b42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36ec6f59d72394edcd8de9ab2cb50fa7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#a36ec6f59d72394edcd8de9ab2cb50fa7">operator/</a> (const <a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a> &amp;vector, float coeff)</td></tr>
<tr class="memdesc:a36ec6f59d72394edcd8de9ab2cb50fa7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divid.  <a href="#a36ec6f59d72394edcd8de9ab2cb50fa7">More...</a><br /></td></tr>
<tr class="separator:a36ec6f59d72394edcd8de9ab2cb50fa7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d9cfe0404b2d0f59598ede6cad5b036"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#a6d9cfe0404b2d0f59598ede6cad5b036">operator*</a> (const <a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a> &amp;vector, float coeff)</td></tr>
<tr class="memdesc:a6d9cfe0404b2d0f59598ede6cad5b036"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplyf.  <a href="#a6d9cfe0404b2d0f59598ede6cad5b036">More...</a><br /></td></tr>
<tr class="separator:a6d9cfe0404b2d0f59598ede6cad5b036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2701e2f2b64dcf867078a3fd2e01ec9f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#a2701e2f2b64dcf867078a3fd2e01ec9f">operator*</a> (float coeff, const <a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a> &amp;vector)</td></tr>
<tr class="memdesc:a2701e2f2b64dcf867078a3fd2e01ec9f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiply.  <a href="#a2701e2f2b64dcf867078a3fd2e01ec9f">More...</a><br /></td></tr>
<tr class="separator:a2701e2f2b64dcf867078a3fd2e01ec9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6445af2cc5145fc68833d6257072bcb5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#a6445af2cc5145fc68833d6257072bcb5">operator+</a> (const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;vectorA, const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;vectorB)</td></tr>
<tr class="memdesc:a6445af2cc5145fc68833d6257072bcb5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add.  <a href="#a6445af2cc5145fc68833d6257072bcb5">More...</a><br /></td></tr>
<tr class="separator:a6445af2cc5145fc68833d6257072bcb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa699543f49850bdc5a3707ae6f768907"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#aa699543f49850bdc5a3707ae6f768907">operator-</a> (const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;vectorA, const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;vectorB)</td></tr>
<tr class="memdesc:aa699543f49850bdc5a3707ae6f768907"><td class="mdescLeft">&#160;</td><td class="mdescRight">Substract.  <a href="#aa699543f49850bdc5a3707ae6f768907">More...</a><br /></td></tr>
<tr class="separator:aa699543f49850bdc5a3707ae6f768907"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25508af0e609e676205a68f528b72f7c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#a25508af0e609e676205a68f528b72f7c">operator-</a> (const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;vector)</td></tr>
<tr class="memdesc:a25508af0e609e676205a68f528b72f7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Minus.  <a href="#a25508af0e609e676205a68f528b72f7c">More...</a><br /></td></tr>
<tr class="separator:a25508af0e609e676205a68f528b72f7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8aa5ce31a59d8c9679ea46f08cd09bda"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#a8aa5ce31a59d8c9679ea46f08cd09bda">operator/</a> (const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;vector, float coeff)</td></tr>
<tr class="memdesc:a8aa5ce31a59d8c9679ea46f08cd09bda"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divid.  <a href="#a8aa5ce31a59d8c9679ea46f08cd09bda">More...</a><br /></td></tr>
<tr class="separator:a8aa5ce31a59d8c9679ea46f08cd09bda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09c909db6a634147cc63ebd2aea5a2d2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#a09c909db6a634147cc63ebd2aea5a2d2">operator*</a> (const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;vectorA, const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;vectorB)</td></tr>
<tr class="memdesc:a09c909db6a634147cc63ebd2aea5a2d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Hadamard product.  <a href="#a09c909db6a634147cc63ebd2aea5a2d2">More...</a><br /></td></tr>
<tr class="separator:a09c909db6a634147cc63ebd2aea5a2d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02ef876816209fff2d79cb1d79ccff84"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#a02ef876816209fff2d79cb1d79ccff84">operator*</a> (const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;vector, float coeff)</td></tr>
<tr class="memdesc:a02ef876816209fff2d79cb1d79ccff84"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiply.  <a href="#a02ef876816209fff2d79cb1d79ccff84">More...</a><br /></td></tr>
<tr class="separator:a02ef876816209fff2d79cb1d79ccff84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a449cfa3fbd1852d5718a835112f6957e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#a449cfa3fbd1852d5718a835112f6957e">operator*</a> (float coeff, const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;vector)</td></tr>
<tr class="memdesc:a449cfa3fbd1852d5718a835112f6957e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiply.  <a href="#a449cfa3fbd1852d5718a835112f6957e">More...</a><br /></td></tr>
<tr class="separator:a449cfa3fbd1852d5718a835112f6957e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e3e0c05a548ad880197a0f90cb68305"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#a4e3e0c05a548ad880197a0f90cb68305">CrossProduct</a> (const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;vectorA, const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;vectorB)</td></tr>
<tr class="memdesc:a4e3e0c05a548ad880197a0f90cb68305"><td class="mdescLeft">&#160;</td><td class="mdescRight">Cross product.  <a href="#a4e3e0c05a548ad880197a0f90cb68305">More...</a><br /></td></tr>
<tr class="separator:a4e3e0c05a548ad880197a0f90cb68305"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0eaa0f510f506d44345e82acd65e9b86"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceflair_1_1core.html#a0eaa0f510f506d44345e82acd65e9b86">DotProduct</a> (const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;vectorA, const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;vectorB)</td></tr>
<tr class="memdesc:a0eaa0f510f506d44345e82acd65e9b86"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dot product.  <a href="#a0eaa0f510f506d44345e82acd65e9b86">More...</a><br /></td></tr>
<tr class="separator:a0eaa0f510f506d44345e82acd65e9b86"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a6dbece12f2117234500c91be48ea781c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6dbece12f2117234500c91be48ea781c"></a>
<a class="el" href="classflair_1_1core_1_1_dummy_type.html">DummyType</a>&#160;</td><td class="memItemRight" valign="bottom"><b>dummyType</b></td></tr>
<tr class="separator:a6dbece12f2117234500c91be48ea781c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad87fcd9f0a37939dfec9611a248b4658"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad87fcd9f0a37939dfec9611a248b4658"></a>
<a class="el" href="classflair_1_1core_1_1_signed_integer_type.html">SignedIntegerType</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Int8Type</b></td></tr>
<tr class="separator:ad87fcd9f0a37939dfec9611a248b4658"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a2cd054ab7f3308038a53882c7f4e7a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7a2cd054ab7f3308038a53882c7f4e7a"></a>
<a class="el" href="classflair_1_1core_1_1_signed_integer_type.html">SignedIntegerType</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Int16Type</b></td></tr>
<tr class="separator:a7a2cd054ab7f3308038a53882c7f4e7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ca29f33fc446a0d6c6fd314c78069b3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4ca29f33fc446a0d6c6fd314c78069b3"></a>
<a class="el" href="classflair_1_1core_1_1_unsigned_integer_type.html">UnsignedIntegerType</a>&#160;</td><td class="memItemRight" valign="bottom"><b>UInt8Type</b></td></tr>
<tr class="separator:a4ca29f33fc446a0d6c6fd314c78069b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a388da3412e183befb390ac46023bdcac"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a388da3412e183befb390ac46023bdcac"></a>
<a class="el" href="classflair_1_1core_1_1_unsigned_integer_type.html">UnsignedIntegerType</a>&#160;</td><td class="memItemRight" valign="bottom"><b>UInt16Type</b></td></tr>
<tr class="separator:a388da3412e183befb390ac46023bdcac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74c64d35d845a87219d68d2ffaaac833"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a74c64d35d845a87219d68d2ffaaac833"></a>
<a class="el" href="classflair_1_1core_1_1_float_type.html">FloatType</a>&#160;</td><td class="memItemRight" valign="bottom"><b>floatType</b></td></tr>
<tr class="separator:a74c64d35d845a87219d68d2ffaaac833"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6d174017f93c73db69089138f9b74c1"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad6d174017f93c73db69089138f9b74c1"></a>
<a class="el" href="classflair_1_1core_1_1_double_type.html">DoubleType</a>&#160;</td><td class="memItemRight" valign="bottom"><b>doubleType</b></td></tr>
<tr class="separator:ad6d174017f93c73db69089138f9b74c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Core classes. </p>
</div><h2 class="groupheader">Typedef Documentation</h2>
<a class="anchor" id="acc0fa041e08ecf73b2d1d723c339a736"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef unsigned long long <a class="el" href="namespaceflair_1_1core.html#acc0fa041e08ecf73b2d1d723c339a736">flair::core::Time</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Time definition, in ns. </p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="ace74842bdd3bf9d982724d868872eec2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classflair_1_1core_1_1_framework_manager.html">FrameworkManager</a>* flair::core::getFrameworkManager </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>get <a class="el" href="classflair_1_1core_1_1_framework_manager.html" title="Main class of the Framework library. ">FrameworkManager</a> </p>
<dl class="section return"><dt>Returns</dt><dd>the <a class="el" href="classflair_1_1core_1_1_framework_manager.html" title="Main class of the Framework library. ">FrameworkManager</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a4783118d327bc3461f35818366dbd458"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool flair::core::IsBigEndian </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>is big endian? </p>
<dl class="section return"><dt>Returns</dt><dd>true if big endian, false if little endian </dd></dl>

</div>
</div>
<a class="anchor" id="a63b4b9f532f414a0e0023acaf81f845e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceflair_1_1core.html#acc0fa041e08ecf73b2d1d723c339a736">Time</a> flair::core::GetTime </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Time. </p>
<dl class="section return"><dt>Returns</dt><dd>actual time in ns (origin depends on whether the method is compiled in hard real time mode or not. As a conquence, only time differences should be used) </dd></dl>

</div>
</div>
<a class="anchor" id="aa7fe0d3548e4e65719702a7fb29775b1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void flair::core::Printf </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>format</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Formatted print. </p>
<p>See standard printf for syntax.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">format</td><td>text string to display </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab372a1107820a30d6fcbef13c8989caa"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a> flair::core::operator+ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a> const &amp;&#160;</td>
          <td class="paramname"><em>quaterniontA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a> const &amp;&#160;</td>
          <td class="paramname"><em>quaterniontB</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add. </p>
<p>Add</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">quaterniontA</td><td>quaternion </td></tr>
    <tr><td class="paramname">quaterniontB</td><td>quaternion</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>quaterniontA+quaterniontB </dd></dl>

</div>
</div>
<a class="anchor" id="ac696d4111ec3b0241bc094add5666245"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a> flair::core::operator- </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a> const &amp;&#160;</td>
          <td class="paramname"><em>quaternionA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a> const &amp;&#160;</td>
          <td class="paramname"><em>quaterniontB</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Substract. </p>
<p>Substract</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">quaterniontA</td><td>quaternion </td></tr>
    <tr><td class="paramname">quaterniontB</td><td>quaternion</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>quaterniontA-quaterniontB </dd></dl>

</div>
</div>
<a class="anchor" id="af80d99fd1ebc9ab4059ec19d5e9cf2a1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a> flair::core::operator- </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a> &amp;&#160;</td>
          <td class="paramname"><em>quaternion</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Minus. </p>
<p>Minus</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">quaternion</td><td>quaternion</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>-quaternion </dd></dl>

</div>
</div>
<a class="anchor" id="a7a25a222fe16e05be703de31123a6d11"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a> flair::core::operator* </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a> const &amp;&#160;</td>
          <td class="paramname"><em>quaternionA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a> const &amp;&#160;</td>
          <td class="paramname"><em>quaterniontB</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Multiply. </p>
<p>Multiply</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">quaterniontA</td><td>quaternion </td></tr>
    <tr><td class="paramname">quaterniontB</td><td>quaternion</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>quaterniontA*quaterniontB </dd></dl>

</div>
</div>
<a class="anchor" id="a1344cd050aed7267279064d9f51e5bf3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a> flair::core::operator* </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>coeff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a> const &amp;&#160;</td>
          <td class="paramname"><em>quaternion</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Multiply. </p>
<p>Multiply</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">coeff</td><td>coefficient </td></tr>
    <tr><td class="paramname">quat</td><td>quaternion</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>coeff*quat </dd></dl>

</div>
</div>
<a class="anchor" id="a5b293c3961eee927ab186df043028a4e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a> flair::core::operator* </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classflair_1_1core_1_1_quaternion.html">Quaternion</a> const &amp;&#160;</td>
          <td class="paramname"><em>quaternion</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>coeff</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Multiply. </p>
<p>Multiply</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">quat</td><td>quaternion </td></tr>
    <tr><td class="paramname">coeff</td><td>coefficient</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>coeff*quat </dd></dl>

</div>
</div>
<a class="anchor" id="ada20416deb1802b5f5deddb85f02b6ed"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a> flair::core::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a> &amp;&#160;</td>
          <td class="paramname"><em>vectorA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a> &amp;&#160;</td>
          <td class="paramname"><em>vectorB</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add. </p>
<p>Add</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">vectorA</td><td>vector </td></tr>
    <tr><td class="paramname">vectorB</td><td>vector </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a601f3ca18a9e417dc2bb7d8eb2db7b42"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a> flair::core::operator- </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a> &amp;&#160;</td>
          <td class="paramname"><em>vectorA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a> &amp;&#160;</td>
          <td class="paramname"><em>vectorB</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Substract. </p>
<p>Substract</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">vectorA</td><td>vector </td></tr>
    <tr><td class="paramname">vectorB</td><td>vector </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a36ec6f59d72394edcd8de9ab2cb50fa7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a> flair::core::operator/ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a> &amp;&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>coeff</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divid. </p>
<p>Divid</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">vector</td><td>vector </td></tr>
    <tr><td class="paramname">coeff</td><td>coefficent </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>vector/coefficient </dd></dl>

</div>
</div>
<a class="anchor" id="a6d9cfe0404b2d0f59598ede6cad5b036"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a> flair::core::operator* </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a> &amp;&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>coeff</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Multiplyf. </p>
<p>Multiply</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">vector</td><td>vector </td></tr>
    <tr><td class="paramname">coeff</td><td>coefficent </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>coefficient*vector </dd></dl>

</div>
</div>
<a class="anchor" id="a2701e2f2b64dcf867078a3fd2e01ec9f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a> flair::core::operator* </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>coeff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_vector2_d.html">Vector2D</a> &amp;&#160;</td>
          <td class="paramname"><em>vector</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Multiply. </p>
<p>Multiply</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">coeff</td><td>coefficent </td></tr>
    <tr><td class="paramname">vector</td><td>vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>coefficient*vector </dd></dl>

</div>
</div>
<a class="anchor" id="a6445af2cc5145fc68833d6257072bcb5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> flair::core::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;&#160;</td>
          <td class="paramname"><em>vectorA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;&#160;</td>
          <td class="paramname"><em>vectorB</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add. </p>
<p>Add</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">vectorA</td><td>vector </td></tr>
    <tr><td class="paramname">vectorB</td><td>vector</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>vectorA+vectorB </dd></dl>

</div>
</div>
<a class="anchor" id="aa699543f49850bdc5a3707ae6f768907"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> flair::core::operator- </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;&#160;</td>
          <td class="paramname"><em>vectorA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;&#160;</td>
          <td class="paramname"><em>vectorB</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Substract. </p>
<p>Substract</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">vectorA</td><td>vector </td></tr>
    <tr><td class="paramname">vectorB</td><td>vector</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>vectorA-vectorB </dd></dl>

</div>
</div>
<a class="anchor" id="a25508af0e609e676205a68f528b72f7c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> flair::core::operator- </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;&#160;</td>
          <td class="paramname"><em>vector</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Minus. </p>
<p>Minus</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">vector</td><td>vector</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>-vector </dd></dl>

</div>
</div>
<a class="anchor" id="a8aa5ce31a59d8c9679ea46f08cd09bda"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> flair::core::operator/ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>coeff</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Divid. </p>
<p>Divid</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">vector</td><td>vector </td></tr>
    <tr><td class="paramname">coeff</td><td>coefficent</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>vector/coefficient </dd></dl>

</div>
</div>
<a class="anchor" id="a09c909db6a634147cc63ebd2aea5a2d2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> flair::core::operator* </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;&#160;</td>
          <td class="paramname"><em>vectorA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;&#160;</td>
          <td class="paramname"><em>vectorB</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Hadamard product. </p>
<p>Hadamard product</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">vectorA</td><td>vector </td></tr>
    <tr><td class="paramname">vectorBA</td><td>vector</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Hadamard product </dd></dl>

</div>
</div>
<a class="anchor" id="a02ef876816209fff2d79cb1d79ccff84"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> flair::core::operator* </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>coeff</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Multiply. </p>
<p>Multiply</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">vector</td><td>vector </td></tr>
    <tr><td class="paramname">coeff</td><td>coefficent</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>coefficient*vector </dd></dl>

</div>
</div>
<a class="anchor" id="a449cfa3fbd1852d5718a835112f6957e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> flair::core::operator* </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>coeff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;&#160;</td>
          <td class="paramname"><em>vector</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Multiply. </p>
<p>Multiply</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">coeff</td><td>coefficent </td></tr>
    <tr><td class="paramname">vector</td><td>vector</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>coefficient*vector </dd></dl>

</div>
</div>
<a class="anchor" id="a4e3e0c05a548ad880197a0f90cb68305"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> flair::core::CrossProduct </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;&#160;</td>
          <td class="paramname"><em>vectorA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;&#160;</td>
          <td class="paramname"><em>vectorB</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Cross product. </p>
<p>Cross product</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">vectorA</td><td>first vector </td></tr>
    <tr><td class="paramname">vectorB</td><td>second vector</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>cross product </dd></dl>

</div>
</div>
<a class="anchor" id="a0eaa0f510f506d44345e82acd65e9b86"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float flair::core::DotProduct </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;&#160;</td>
          <td class="paramname"><em>vectorA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classflair_1_1core_1_1_vector3_d.html">Vector3D</a> &amp;&#160;</td>
          <td class="paramname"><em>vectorB</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Dot product. </p>
<p>Dot product</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">vectorA</td><td>first vector </td></tr>
    <tr><td class="paramname">vectorB</td><td>second vector</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>dot product </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceflair.html">flair</a></li><li class="navelem"><a class="el" href="namespaceflair_1_1core.html">core</a></li>
    <li class="footer">Generated on Thu Nov 3 2016 10:06:12 for Flair by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.9.1 </li>
  </ul>
</div>
</body>
</html>
